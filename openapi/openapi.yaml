openapi: 3.0.0
info:
  title: The Bria API
  version: ''
  contact:
    name: We are happy to answer any questions you may have at
    email: support@bria.ai
  description: >
    # Introduction
    
    
    The Bria API is intended for users to interact with BriEngine and perform various operations, 
    such as generating new images, customizing uploaded images, and searching. 
    
    This document will provide an overview of the API's capabilities and guide users on how to effectively implement it.


    **The common use of the Bria API is according to the following order:**
      - /upload - By using the *Upload Route*, you can to upload a new image to Bria database.
      - /register - By using the *Register Route*, a new image can be sent to Bria without being uploaded to the database.
      - /info - By using the *Info Route*, you an understand the change possibilities for each object in the image. 
        The following routes can be used if you do not require information for people, objects, and background, but rather only one of them:
         - /person/info
         - /objects/info
         - /background/info
      - /caption - By using the *Caption Route*, you can get a caption that describes the given image.
      - /image/generate - By using the *Image Generate* route, you can generate any image you would like, based on the provided prompt.

    
    With the response from the *Upload/Register Routes* (visual_id), the following routes can be used without any particular order:
      - /search - Utilizing the *Search Route* to look for images you uploaded or registered to Bria that match a text query. 
      - /search_similar_images - Utilizing the *Search Similar Images Route* to look for images you uploaded or registered to Bria that match the chosen image.
      - /crop - The *Crop Route* is used to crop an image without a background, tightly around the remaining region of interest.
      - /increase_resolution - The *Increase Resolution route* is used to upsacle any image. 
      - /image_to_psd - The *Image To Psd route* is used to create a layered psd file out of any image.
      - /video - (Coming Soon) Using the *Video Route* to create a short video based on a single still image.

      
    With the response from the *Info Routes*, the following routes can be used without any particular order:
      - /create - Using the *Create Route* to create a new visual with requested changes of elements according to the /info route possibilities. 
      - /recast_model - Using the *Recast Model Route* to create a new variation of your image, while customizing a portrait to any profession/theme
      - /remove_object - Using the *Remove Object Route* to remove the objects from an image.
      - /remove_bg - Using the *Remove BG Route* to remove the background of a an image.
      - /blur_bg - Using the *Blur BG Route* to create a blur effect on the background of an image.
      - /replace_bg - Using the *Replace BG Route* to generate new backgrounds for an image.
      
        
      
      
    # Versioning


    The current version of the web API is known as V1 and is considered to be in
    a draft phase. While we donâ€™t expect public endpoints to materially change,
    please bear in mind that the API is still under development.


    # Authentication

      The Bria API consists of a number of methods for uploading and creating new visual assets. The REST (representational state transfer) API methods can be called directly from within your own custom code.

        curl --location --request POST 'https://engine.prod.bria-api.com/v1' \
        --header: 'api_token: <...>' \
        ...
        
    # API Access
    
      You can register and access the API Token through Bria's platform <a href="https://bria.ai/api-plans/" target="_blank">by clicking here</a>.
      
externalDocs:
    description: Register and get API Access
    url: 'https://bria.ai/api-plans'
servers:
  - url: https://engine.prod.bria-api.com/v1
paths:
  /upload:
    post:
      tags:
        - Image
      summary: Upload an image
      description: >-

        **Description**


        The *Upload Route* is used to upload visuals to the database. 

        This route returns a visual identification to the user. It's
        the first step for consuming the Bria API for new visuals.


        **Response**

          
          The visual id in the response of the *Upload Route* must be kept by the
        user in order to query image info, modify the image and use the search routes.


        ```{ "visual_id": "9ea9a4d2d19977a7c" }```


        The *visual_id* in the response of the /upload route will be used for all
        other routes.
        Store the visual_id in your database and map it to your image identification method for easy reference


        **Bria generative Web tool**


        The uploaded visual can be seen and used in the Bria generative web tool
        in cases where the tool is licensed as part of the project.


        To do so, the user can access the following url:
        ```https://labs.bria.ai/tools/{visual_id}```, where the *{visual_id}*
        comes from the response of the */upload route*.


        In Bria's web tool, the user has the ability to make many changes to the
        visual and also generate live videos, using an intuitive interactive
        platform.


        Bria's web tool can also be embedded in other websites, with the use of
        an iframe HTML element:
            
            
        <img src="https://bria-web-serving.s3.amazonaws.com/new_tool_29_03_2022.png" />


        **Constraints**


        Files should not be larger than 12MB. The status code 413 will be returned if the file exceeds its
        maximum size.
        
        
        Bria API currently only supports JPEG and PNG files. The status code 415 will be returned if the file is of a different type.
        
      operationId: upload
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The file you would like to upload to Bria.
                  type: string
                  format: binary
                image_url:
                  description: The URL of the file you would like to upload to Bria. The URL should lead to an image publicly available online. Either a file or an image_url should be provided. If both are provided, then the route will use image_url.
                  type: string
                is_private:   
                  description: The image can be included in the Bria public gallery (is_private=false) or only in the Bria gallery of your organization (is_private=true). This parameter is optional and the default value is true.
                  type: string
                  default: true
                
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '206':
          description: File value was not provided.
        '208':
          description: File already uploaded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '400':
          description: Request doesn't contain file part.
        '405':
          description: Method not allowed.
        '413':
          description: Request entity too large.
        '415':
          description: Unsupported media type.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.   
  /register:
    post:
      tags:
        - Image
      summary: Register an image
      description: >-

        **Description**


        A new visual can be registered to Bria without being uploaded to the database using the *Register Route*.
        
        This route returns a visual identification to the user. 
        
        
        It's the first step for consuming the Bria API for new visuals (instead of using the /upload route).


        **Response**

          
          The visual id in the response of the *Register Route* must be kept by the
        user in order to query image info, modify the image and use the search routes.


        ```{ "visual_id": "9ea9a4d2d19977a7c" }```


        The *visual_id* in the response of the /upload route will be used for all
        other routes.
        Store the visual_id in your database and map it to your image identification method for easy reference


        **Bria generative Web tool**


        The registered visual can be seen and used in the Bria generative web tool
        in cases where the tool is licensed as part of the project.


        To do so, the user can access the following url:
        ```https://labs.bria.ai/tools/{visual_id}```, where the *{visual_id}*
        comes from the response of the */register route*.


        In Bria's web tool, the user has the ability to make many changes to the
        visual and also generate live videos, using an intuitive interactive
        platform.


        Bria's web tool can also be embedded in other websites, with the use of
        an iframe HTML element:
            
            
        <img src="https://bria-web-serving.s3.amazonaws.com/new_tool_29_03_2022.png" />


        **Constraints**


        Bria API currently only supports JPEG and PNG files, which are not larger than 12MB. 
        
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_image_key:
                  type: string
                  description: The internal image id in your API, of the image you would like to register to Bria (without uploading it). If your images require authentication, you will need to register them using org_image_key after giving Bria the API authentication information. It is also possible to register images using an org_image_key, without any authentication data.
                  example: "12345acbd"
                image_url:
                  description: The URL of the image you would like to register to Bria. The URL should lead to an image publicly available online. Either an org_image_key or an image_url should be provided. If both are provided, then the route will use image_url. Images can only be registered using image_urls if they do not require authentication.
                  type: string
                is_private:   
                  description: The image can be included in the Bria public gallery (is_private=false) or only in the Bria gallery of your organization (is_private=true). This parameter is optional and the default value is true.
                  type: string
                  default: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '208':
          description: Image already registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.           
  /{visual_id}/info:
    get:
      tags:
        - Image
      summary: Get image info and available actions
      description: >-



        **Description**


        The *Info Route* is used to retrieve useful information on a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides a description of each object and element within the scene 
        along with its available changes, which are supported by the Bria API. 
       


      operationId: info
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "8487fb411f3c6716"
          description: visual id of the image, received after using the /upload or /register route.
        - in: query
          name: lean
          schema:
            type: string
          example: false
          description: Set the value 'true' for this parameter if you wish to receive only the high-level information (currently, this means only the description, org_height, and org_width) from the info route. This parameter is optional and as default the value is 'false'. 
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    description: (Coming Soon) A brief description of the visual
                  org_height:
                    type: integer
                    description: The height of the image
                  org_width:
                    type: integer
                    description: The width of the image
                  scene:
                    type: array
                    description: An array of objects representing each of the elements recognized in the visual.
                    items:
                      type: object
                      properties:
                        actions:
                          type: object
                          description: The available API actions for this specific element, based directly on its type and specificity
                        bg_overlap:
                          type: number
                          description: The percentage of the object's surface that is mutual with the background. This property is only available for elements with the label 'object'.
                        id:
                          type: string
                          description: The id of the element
                        labels:
                          type: array
                          description: The known information about the element, such as age range and gender
                        oracle:
                          type: object
                          description: The predicted quality of the available actions for this specific element
                        rect:
                          type: object
                          description: The location of the element inside the image. x and y represent the upper left corner of the object, and by using the w (width) and h (height) you can create a rectangle around the element.
                        type:
                          type: string
                          description: The type of the element
              examples:
                example:
                  value:
                    description: Coming Soon
                    scene: [
                      {
                        actions: 
                          {
                          "age":[
                             "mid-20",
                             "mid-40",
                             "mid-60"
                          ],
                          "Beard":[
                             "shaved",
                             "medium",
                             "full"
                          ],
                          "diversity":[
                             "africa",
                             "korea",
                             "india",
                             "japan",
                             "sweden",
                             "germany",
                             "russia",
                             "mexico",
                             "brazil",
                             "england",
                             "spain",
                             "france"
                          ],
                          "expression":[
                             "happy",
                             "surprised",
                             "dreaming",
                             "angry",
                             "fear",
                             "contempt",
                             "disgusted",
                             "sad"
                          ],
                          "gender":[
                             "femininity",
                             "masculinity"
                          ],
                          "glasses":[
                             "light",
                             "none",
                             "heavy"
                          ],
                          "hair_line":[
                             "high",
                             "low"
                          ],
                          "haircolor":[
                             "black",
                             "brown",
                             "red",
                             "blond",
                             "gray"
                          ],
                          "makeup":[
                             "light",
                             "heavy",
                             "none"
                          ]
                          },
                        id: a48284e4832c809e4475ad5de7bdd333658e363b417a28991022a6fa79488a6b,
                        labels:
                          [
                            "age_23-35",
                            "calm"
                          ],
                        oracle:
                          {
                            "age":{
                               "age":"high"
                            },
                            "Beard":{
                               "Beard":"high"
                            },
                            "diversity":{
                               "africa":"high",
                               "brazil":"high",
                               "england":"high",
                               "france":"high",
                               "germany":"high",
                               "india":"high",
                               "japan":"high",
                               "korea":"high",
                               "mexico":"high",
                               "russia":"high",
                               "spain":"high",
                               "sweden":"high"
                            },
                            "expression":{
                               "angry":"high",
                               "contempt":"high",
                               "disgusted":"high",
                               "dreaming":"high",
                               "fear":"high",
                               "happy":"high",
                               "surprised":"high"
                            },
                            "gender":{
                               "gender":"high"
                            },
                            "glasses":{
                               "glasses":"high"
                            },
                            "hair_line":{
                               "hair_line":"high"
                            },
                            "haircolor":{
                               "haircolor":"high"
                            }
                         },
                        type: person
                      },
                      {
                          "id": "0a349cbe603a786570d4eec7dd9cf64e568ef72767a5847251b32988a2b99dff",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 647.4609375,
                              "y": 3910.6640625,
                              "w": 1139.53125,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4
                      },
                      {
                        actions:
                          {
                            "remove":[
                               true
                            ]
                          },
                        id: 26bf1a1e6b7c5a802b804a52be420a14e44c7d4a393d695afb9d58c9f869cac3,
                        labels: null,
                        oracle:
                          {
                            "remove":true
                          },
                        type: background
                                      }
                    ]
        '205':
          description: File hasnâ€™t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call /info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/person/info:
    get:
      tags:
        - Presenter
      summary: Get info and available actions for the presenters in the image
      description: >-



        **Description**


        The *Person/Info Route* is used to retrieve useful information on the people in a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides a description of each person within the scene 
        along with its available changes, which are supported by the Bria API. 
        
        This route should be used instead of the main /info route when you are only interested in 
        information and available actions for the people in the image. 
        With this route, you will save time by only obtaining information that is relevant to your needs.

      operationId: person/info
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "f49943971e3039c7"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actions:
                      type: object
                      description: The available API actions for this specific person.
                    id:
                      type: string
                      description: The id of the person
                    labels:
                      type: array
                      description: The known information about the person, such as age range and gender
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for this specific person
                    rect:
                      type: object
                      description: The location of the face inside the image. x and y represent the upper left corner of the face, and by using the w (width) and h (height) you can create a rectangle around the face.
                    type:
                      type: string
                      description: In this route it will allways be 'person'
              examples:
                example:
                  value:
                    [
                      {
                        actions:{
                           "age":[
                              "mid-20",
                              "mid-40",
                              "mid-60"
                           ],
                           "Beard":[
                              "shaved",
                              "medium",
                              "full"
                           ],
                           "diversity":[
                              "original",
                              "africa",
                              "korea",
                              "india",
                              "japan",
                              "sweden",
                              "germany",
                              "russia",
                              "mexico",
                              "brazil",
                              "england",
                              "spain",
                              "france",
                              "unsplash"
                           ],
                           "expression":[
                              "happy",
                              "surprised",
                              "dreaming",
                              "angry",
                              "fear",
                              "contempt",
                              "disgusted",
                              "sad",
                              "smile"
                           ],
                           "gender":[
                              "femininity",
                              "masculinity"
                           ],
                           "glasses":[
                              "light",
                              "none",
                              "heavy"
                           ],
                           "hair_line":[
                              "high",
                              "low"
                           ],
                           "haircolor":[
                              "black",
                              "brown",
                              "red",
                              "blond",
                              "gray"
                           ],
                           "makeup":[
                              "light",
                              "heavy",
                              "none"
                           ]
                        },
                        id:"c6bbe1cd719300c11e5c581889e9383245a0c1d923f210a3445e8ea5a25500e0",
                        labels:[
                           "age_14-26",
                           "glasses",
                           "Female"
                        ],
                        oracle:{
                           "age":{
                              "age":"low"
                           },
                           "Beard":{
                              "Beard":"low"
                           },
                           "diversity":{
                              "africa":"low",
                              "brazil":"low",
                              "england":"low",
                              "france":"low",
                              "germany":"low",
                              "india":"low",
                              "japan":"low",
                              "korea":"low",
                              "mexico":"low",
                              "russia":"low",
                              "spain":"low",
                              "sweden":"low"
                           },
                           "expression":{
                              "angry":"high",
                              "calm":"high",
                              "contempt":"high",
                              "disgusted":"high",
                              "dreaming":"high",
                              "fear":"high",
                              "happy":"high",
                              "surprised":"high"
                           },
                           "gender":{
                              "gender":"low"
                           },
                           "glasses":{
                              "glasses":"low"
                           },
                           "hair_line":{
                              "hair_line":"low"
                           },
                           "haircolor":{
                              "haircolor":"low"
                           }
                        },
                        rect:{
                           "h":375.98625326156616,
                           "w":280.4049072265625,
                           "x":1134.1341552734375,
                           "y":290.6307406425476
                        },
                        type:"person"
                     },
                     {
                        actions:{
                           "age":[
                              "mid-20",
                              "mid-40",
                              "mid-60"
                           ],
                           "Beard":[
                              "shaved",
                              "medium",
                              "full"
                           ],
                           "diversity":[
                              "original",
                              "africa",
                              "korea",
                              "india",
                              "japan",
                              "sweden",
                              "germany",
                              "russia",
                              "mexico",
                              "brazil",
                              "england",
                              "spain",
                              "france",
                              "unsplash"
                           ],
                           "expression":[
                              "happy",
                              "surprised",
                              "dreaming",
                              "angry",
                              "fear",
                              "contempt",
                              "disgusted",
                              "sad",
                              "smile"
                           ],
                           "gender":[
                              "femininity",
                              "masculinity"
                           ],
                           "glasses":[
                              "light",
                              "none",
                              "heavy"
                           ],
                           "hair_line":[
                              "high",
                              "low"
                           ],
                           "haircolor":[
                              "black",
                              "brown",
                              "red",
                              "blond",
                              "gray"
                           ],
                           "makeup":[
                              "light",
                              "heavy",
                              "none"
                           ]
                        },
                        id:"d74da71f722b45de5f18f93e9dd7fc64a50a5a5dda001985ab9c2374807182b8",
                        labels:[
                           "age_26-42",
                           "happy",
                           "Female"
                        ],
                        oracle:{
                           "age":{
                              "age":"high"
                           },
                           "Beard":{
                              "Beard":"high"
                           },
                           "diversity":{
                              "africa":"high",
                              "brazil":"high",
                              "england":"high",
                              "france":"high",
                              "germany":"high",
                              "india":"high",
                              "japan":"high",
                              "korea":"high",
                              "mexico":"high",
                              "russia":"high",
                              "spain":"high",
                              "sweden":"high"
                           },
                           "expression":{
                              "angry":"high",
                              "calm":"high",
                              "contempt":"high",
                              "disgusted":"high",
                              "dreaming":"high",
                              "fear":"high",
                              "happy":"high",
                              "surprised":"high"
                           },
                           "gender":{
                              "gender":"high"
                           },
                           "glasses":{
                              "glasses":"high"
                           },
                           "hair_line":{
                              "hair_line":"high"
                           },
                           "haircolor":{
                              "haircolor":"high"
                           }
                        },
                        rect:{
                           "h":354.8530983924866,
                           "w":282.885498046875,
                           "x":555.80419921875,
                           "y":486.4655692577362
                        },
                        type:"person"
                     }
                  ]    
        '205':
          description: File hasnâ€™t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call person/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/objects/info:
    get:
      tags:
        - Object
      summary: Get info and available actions for the objects in the image
      description: >-



        **Description**


        The *Objects/Info Route* is used to retrieve useful information on the objects in a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides a description of each object within the scene 
        along with its available changes, which are supported by the Bria API. 
        
        This route should be used instead of the main /info route when you are only interested in 
        information and available actions for the objects in the image. 
        With this route, you will save time by only obtaining information that is relevant to your needs.

      operationId: objects/info
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "f49943971e3039c7"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the object
                    type:
                      type: string
                      description: In this route it will be the type of the object
                    labels:
                      type: array
                      description: In this route it will allways be 'object'
                    rect:
                      type: object
                      description: The location of the object inside the image. x and y represent the upper left corner of the object, and by using the w (width) and h (height) you can create a rectangle around the object.
                    actions:
                      type: object
                      description: The available API actions for this specific object.
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for this specific object
                    bg_overlap:
                      type: number
                      description: The percentage of the object's surface that is mutual with the background.
                      
              examples:
                example:
                  value:
                    [
                      {
                          "id": "d34ef7cf0b4e1ea2e414cdff7ae9ded80162f1f93bb94df709fe29d9df3dbfb5",
                          "type": "dining table",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 1294.921875,
                              "y": 4143.75,
                              "w": 2253.1640625,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4
                      },
                      {
                          "id": "d1b004a7b3b065aa8b98b321b67806cb3e6ca09e596ad6d3f31c625e46e168e2",
                          "type": "potted plant",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 4558.125,
                              "y": 2667.5390625,
                              "w": 517.96875,
                              "h": 725.15625
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.67
                      },
                      {
                          "id": "f173a0ad62749dbeb97f8055f51d3d125d4c9c968ee3ae46754e911f3fd12000",
                          "type": "vase",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 3366.796875,
                              "y": 2123.671875,
                              "w": 595.6640625,
                              "h": 284.8828125
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.89
                      },
                      {
                          "id": "7a3bd30a268840cc3645abf7b512c3b9b8bc2d55d98aa5f7ef8c1e72348a016c",
                          "type": "potted plant",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 3263.203125,
                              "y": 1398.515625,
                              "w": 854.6484375,
                              "h": 751.0546875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 1.0
                      },
                      {
                          "id": "0289aaf067a6d7d812738a8d42d17e54ffd2fa79e0decbca46a873018a6d791a",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 2900.625,
                              "y": 3858.8671875,
                              "w": 1502.109375,
                              "h": 2486.25
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.0
                      },
                      {
                          "id": "0a349cbe603a786570d4eec7dd9cf64e568ef72767a5847251b32988a2b99dff",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 647.4609375,
                              "y": 3910.6640625,
                              "w": 1139.53125,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4
                      }
                  ]
        '205':
          description: File hasnâ€™t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call person/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/background/info:
    get:
      tags:
        - Background
      summary: Get info and available actions for the background of the image
      description: >-



        **Description**


        The *Background/Info Route* is used to retrieve useful information on the background of a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides the available changes for the background, which are supported by the Bria API. 
        
        This route should be used instead of the main /info route when you are only interested in 
        the available actions for the background of the image. 
        With this route, you will save time by only obtaining information that is relevant to your needs.

      operationId: background/info
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "f49943971e3039c7"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the background
                    type:
                      type: string
                      description: In this route it will always be 'background'
                    labels:
                      type: array
                      description: In this route currently it's null
                    rect:
                      type: object
                      description: In this route currently it's null
                    actions:
                      type: object
                      description: The available API actions for the background
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for the background
              examples:
                example:
                  value:
                    {
                      "id": "67a9746d4c7939e2753869cdb4330852b6e2472b8110ae1fb59f8c033fc7fe1f",
                      "type": "background",
                      "labels": null,
                      "rect": null,
                      "actions": {
                          "remove": [
                              true
                          ],
                          "blur": [
                              true
                          ],
                          "replace": [
                              true
                          ]
                      },
                      "oracle": {
                          "remove": true,
                          "blur": true,
                          "replace": true
                      }
                  }
        '205':
          description: File hasnâ€™t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call person/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/caption:
    get:
      tags:
        - Image
      summary: Get a caption that describes the image
      description: >-


        **Description**



        The *Caption Route* is used to get a caption that describes the given image.
        

      operationId: caption
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image for which you'd like a caption
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        caption:
                          type: string
                          example: "woman walking on a bridge in the jungle"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /image/generate:
    get:
      tags:
        - Image
      summary: Generate images using a prompt
      description: >-


        **Description**
        

        The *Image Generation Route* allows you to generate images based on any given text prompt. 
        
        
        2048 x 2048 pixels will be the size of the generated images.
        
        
        
        Here are some examples:
        
        
        **prompt:** alien world
        
        
        **style:** photo realistic
           
           
        **atmosphere:** dramatic
           
           
        **camera:** portrait
           
           
        **medium:** photography
           
           
        **results:**
           
        <img src="https://images.bria.ai/images_resized/c7700f41fe4f2171.jpg" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/a5be5a25a41e6b25.jpg" width="200" height="200"/>
        <img src="https://images.bria.ai/images_resized/b31d95e14cf36f00.jpg" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/d9db8c0f605352ce.jpg" width="200" height="200"/>
        
        
        **prompt:** owl wearing a hat
        
        
        **style:** fashion
           
           
        **atmosphere:** vivid
           
           
        **camera:** close up
           
           
        **medium:** art
           
           
        **results:**
        
        
        <img src="https://images.bria.ai/images_resized/b59b21373eaf2103.jpg" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/af5b3e8c81d1c4cc.jpg" width="200" height="200"/>
        <img src="https://images.bria.ai/images_resized/e59a19cd1a36616e.jpg" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/e0f12375d0b4b1ae.jpg" width="200" height="200"/>
           
           
      operationId: image/generate
      parameters:
        - name: prompt
          in: query
          schema:
            type: string
            example: "woman traveling in the world"
          description: the prompt you would like to use to generate images
        - name: num_results
          in: query
          schema:
            type: integer
            example: 1
          description: how many images you would like to generate. The default and maximum value is 4. 
        - name: style
          in: query
          schema:
            type: string
            example: "photo realistic"
            enum: ['photo realistic','fashion','retro','sports','still life','hyper realistic','travel','artistic','3d render','realistic','fantasy','comic book','minimalistic']
          description: Which style you would like to see in your generated images.
        - name: atmosphere
          in: query
          schema: 
            type: string
            enum: ['dramatic','vivid','warm','cool']
            example: "dramatic"
          description: Which atmosphere you would like to get in your generated images.
        - name: camera
          in: query
          schema: 
            type: string
            enum: ['portrait','close up','aerial','landscape']
            example: "portrait"
          description: Which camera angle you would like to see in your generated images.
        - name: medium
          in: query
          schema: 
            type: string
            enum: ['photography','art']
            example: "photography"
          description: Which medium should be included in your generated images.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        synthetic_url:
                          type: string
                          description: the URL where you can find the generated image.
                          example: "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
        '512':
          description: Insufficient resources to process the request.
  /{visual_id}/create:
    post:
      tags:
        - Presenter
      summary: Modify the presenters in the image
      description: >-


        **Description**



        The *Create Route* is used to create a new visual, based on the changes
        requested by the user for a previously uploaded visual.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.


        This route returns both the URL and the sid associated with the updated image.

      operationId: create
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "8487fb411f3c6716"
          description: visual id of the image the user wants to create a new visual from.
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: array
                  description: The requested changes to the original visual.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Id of the selected object in the image, to which the user would like to make changes.
                        example: "a48284e4832c809e4475ad5de7bdd333658e363b417a28991022a6fa79488a6b"
                      actions:
                        type: object
                        description: The changes the user wishes to perform for this object in the image. Each action the user chooses to use must be included in the info route response for this object and image. This is essential for the /create request to be successful.
                        properties:
                          age:
                            type: string
                            enum: ["mid-20", "mid-40", "mid-60"]
                            description: Changing the age of a selected object.
                            example: "mid-60"
                          diversity:
                            type: string
                            enum:
                              - africa
                              - korea
                              - india
                              - japan
                              - sweden
                              - germany
                              - russia
                              - mexico
                              - brazil
                              - england
                              - spain
                              - france
                            description: Changing the diversity of a selected object.
                            example: "france"
                          expression:
                            type: string
                            enum:
                              - happy
                              - surprised
                              - dreaming
                              - angry
                              - fear
                              - contempt
                              - disgusted
                              - sad
                            description: Changing the expression of a selected object.
                            example: "happy"
                          glasses:
                            type: string
                            enum: ["light", "heavy", "none"]
                            description: Changing the glasses of a selected object.
                            example: "light"
                          haircolor:
                            type: string
                            enum: ["black", "brown", "red", "blond", "gray"]
                            description: Changing the hair color of a selected object.
                            example: "brown"
                          gender:
                            type: string
                            enum: ["femininity","masculinity"]
                            description: Changing the gender of a selected object.
                            example: "masculinity"
                          makeup:
                            type: string
                            enum: ["light", "heavy", "none"]
                            description: Changing the makeup of a selected object.
                            example: "none"
                          hair_line:
                            type: string
                            enum: ["high", "low"]
                            description: Changing the hair line of a selected object.
                            example: "high"
                          Beard:
                            type: string
                            enum: ["shaved", "medium", "full"]
                            description: Changing the facial hair of a selected object.
                            example: "medium"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the new visual created in the request. It is a temporary URL that will expire
                    example: "https://d1uzvjowrxhw13.cloudfront.net/api/create_results/8487fb411f3c6716_05e8a8dc-b723-11ec-be15-c28fc8b4a55b.JPEG?AWSAccessKeyId=ASIAUL5JH7ABM5GPF244&Signature=OaE%2BTJW%2FBJFDB2xGXpy%2F%2F8TYkAE%3D&x-amz-security-token=FwoGZXIvYXdzEEsaDHAX5TxTwymFAQYSwSKYBK3lKAwEipl9tjg1QQwWMdQDqS%2B0rYkexasgxxW78Vz4DvJUVPISpnTOZk4h%2Fy6%2BikLC5%2FYGY86SL8980ZHZzRgqcodDJ0n6ljB7SgbkfJnSpgx%2F8iCHzoDH%2BS7YrUjnR7e%2FUz%2B4sIbV%2BSHGn36EXTNnrm%2FOgCsiL9vqLSGFEo5R1pLYIbezxWCEWMLcDO5x9WsVoPRYW7c%2B5B%2B1Ku3qybQEBFRex4BVisJU4NTXbwQKFWMbkTjHg5vK%2FEdQn7OzmCA7SfCSHe%2FqDZIBQG0ki%2BHt%2Fs4bAYYTZpl%2FjoUJTldlltdWH2uitj%2BBeyQKcUnHrPjTY1CsAOEC6OV%2FKlZfOjbNJTvlmHc7%2BKP3iICKlCVJwvRK6%2FnmU7mUVOb%2FmgD2kIvBq5G6fNxXQlKfFGZE2lSs8HR83sp44Qz8hm60DPfK45hE0XdVnIS2jY%2F1a%2BYBmijCr4HDTgv52D53CdnOiQ%2BQ8Yld0bBZRC4aDBATcvcsDcnO4BBMY0NS1c%2BSJ6b4IMxDK2OKdanf9EYiDgzr3ebsS1m7j4NX3pEvNC99YF%2B5PQwDYhbMwlMCAG9AMs9%2FF86Al3czOJFOxV1ClBEoUKy2TgntGraCp76UoLmRrHuRq7WKQUvIj2HAXsIlyNkBg3z498M1Gh7vyD%2F7xQgA0Ny6zYeC1gBH4HmYtFlBS%2BJimmxFlCoCuyFhBmUXp7p6oBI3APuSyQYLKLmQwJIGMioiS3mUno68q7GAsD%2FPmSCM8xMeEWF8IegvlU4XWAQuNnQJLVtqwkZb1Qo%3D&Expires=1650276159"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/recast_model:
    post:
      tags:
        - Presenter
      summary: Customize a portrait of a presenter to any profession/theme
      description: >-


        **Description**



        TheÂ *Recast Model Route*Â is used to create customized and eye-catching images of people that match various themes or professions by modifying their outfit, body structure, hair, and background.
        
        
        This provides an easy and quick way to generate high-quality visuals for businesses, creative projects, or personal use without the need for extensive photography or design work. 
        
        
        The feature is also fun and engaging for social media or entertainment purposes, allowing users to create custom avatars or profile pictures that reflect their personality.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
      operationId: recast_model
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user wishes to customize.
        - in: query
          name: prompt
          schema:
            type: string
            example: "superhero"
          description: The profession or theme to which you would like to customize your image.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  message:
                    type: string
                    example: "Finished sucessfully"
                    description: A message that describes the request status. The options are Finished sucessfully, Content might not be safe for work, only 1 face allowed, No face found.
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
                  status:
                    type: string
                    example: "SUCCESS"
                    description: The request status. The options are SUCCESS, NSFW, ONE_FACE_ALLOWED, NO_FACES_FOUND.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.   
  /{visual_id}/remove_object:
    post:
      tags:
        - Object
      summary: Remove objects from an image
      description: >-
        **Description**

        The *Remove Object Route* is used to remove objects, using the object id returned in the /info or objects/info request.
        You can send in one request multiple objects for removal.

        You can also use this route on a modified image by providing the sid from the response of the previously used route.

        This route returns both the URL and the sid associated with the updated image.
      operationId: remove_object
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user wants to remove objects from.
        - in: query
          name: desired_resolution
          schema:
            type: string
            enum: ['original','nhd','svga','xga','hd','wuxga','uwfhd','wqxga','uwqhd','uhd']
            example: "nhd"
          description: The desired resolution of the updated image. This parameter is optional.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: array
                  description: The requested changes to the image. You can send in one request multiple objects for removal, each as an object in this array.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Id of the selected object in the image, to which the user would like to make changes (currently the only available action is removal).
                        example: "a48284e4832c809e4475ad5de7bdd333658e363b417a28991022a6fa79488a6b"
                      actions:
                        type: object
                        description: The changes the user wishes to perform for this object in the image. Each action the user chooses to use must be included in the info route response for this object and image.
                        properties:
                          remove:
                            type: boolean
                            description: Use the value true if you would like to remove the object
                            example: true
                sid:
                  type: string
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
                  image_res:
                    type: string
                    description: URL that represents the new visual created in the request. It is a temporary URL that will expire
                    example: "https://d1uzvjowrxhw13.cloudfront.net/api/create_results/8487fb411f3c6716_05e8a8dc-b723-11ec-be15-c28fc8b4a55b.JPEG?AWSAccessKeyId=ASIAUL5JH7ABM5GPF244&Signature=OaE%2BTJW%2FBJFDB2xGXpy%2F%2F8TYkAE%3D&x-amz-security-token=FwoGZXIvYXdzEEsaDHAX5TxTwymFAQYSwSKYBK3lKAwEipl9tjg1QQwWMdQDqS%2B0rYkexasgxxW78Vz4DvJUVPISpnTOZk4h%2Fy6%2BikLC5%2FYGY86SL8980ZHZzRgqcodDJ0n6ljB7SgbkfJnSpgx%2F8iCHzoDH%2BS7YrUjnR7e%2FUz%2B4sIbV%2BSHGn36EXTNnrm%2FOgCsiL9vqLSGFEo5R1pLYIbezxWCEWMLcDO5x9WsVoPRYW7c%2B5B%2B1Ku3qybQEBFRex4BVisJU4NTXbwQKFWMbkTjHg5vK%2FEdQn7OzmCA7SfCSHe%2FqDZIBQG0ki%2BHt%2Fs4bAYYTZpl%2FjoUJTldlltdWH2uitj%2BBeyQKcUnHrPjTY1CsAOEC6OV%2FKlZfOjbNJTvlmHc7%2BKP3iICKlCVJwvRK6%2FnmU7mUVOb%2FmgD2kIvBq5G6fNxXQlKfFGZE2lSs8HR83sp44Qz8hm60DPfK45hE0XdVnIS2jY%2F1a%2BYBmijCr4HDTgv52D53CdnOiQ%2BQ8Yld0bBZRC4aDBATcvcsDcnO4BBMY0NS1c%2BSJ6b4IMxDK2OKdanf9EYiDgzr3ebsS1m7j4NX3pEvNC99YF%2B5PQwDYhbMwlMCAG9AMs9%2FF86Al3czOJFOxV1ClBEoUKy2TgntGraCp76UoLmRrHuRq7WKQUvIj2HAXsIlyNkBg3z498M1Gh7vyD%2F7xQgA0Ny6zYeC1gBH4HmYtFlBS%2BJimmxFlCoCuyFhBmUXp7p6oBI3APuSyQYLKLmQwJIGMioiS3mUno68q7GAsD%2FPmSCM8xMeEWF8IegvlU4XWAQuNnQJLVtqwkZb1Qo%3D&Expires=1650276159"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.     
  /{visual_id}/remove_bg:
    get:
      tags:
        - Background
      summary: Remove the background of an image
      description: >-


        **Description**



        TheÂ *Remove BG Route*Â is used to remove the background of a previously uploaded image. 
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
        

      operationId: remove_bg
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image from which the user wishes to remove the background
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
        - in: query
          name: desired_resolution
          schema:
            type: string
            enum: ['original','nhd','svga','xga','hd','wuxga','uwfhd','wqxga','uwqhd','uhd']
            example: "nhd"
          description: The desired resolution of the updated image. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/blur_bg:
    get:
      tags:
        - Background
      summary: Creates a blur effect on the background of an image
      description: >-


        **Description**



        TheÂ *Blur BG Route*Â is used to create a blur effect on the background of a previously uploaded image. 
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
         

      operationId: blur_bg
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image for which the background should be blurred.
        - in: query
          name: scale
          schema:
            type: integer
            example: 4
            minimum: 1
            maximum: 5
            default: 5
          description: A scale for determining how blurry the background of the image should be. The options are 1, 2, 3, 4, 5. This parameter is optional.
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.  
  /{visual_id}/replace_bg:
    post:
      tags:
        - Background
      summary: Generate a new background for an image
      description: >-


        **Description**



        TheÂ *Replace BG Route*Â is used to replace the background of a previously uploaded image, with a generated background.
        
        
        Additionally, you can change the image size of the final result as well as the positioning of the product or foreground of the image.
        
        
        This will enable you to create new and unique variations of your original image.
        
        
        Here are some examples:
        
        
        **original image**: 
        
        
        <img src="https://images.bria.ai/images_resized/e69b992499669933.png" width="200"/>
        
        
        **bg_prompt**: environment living room interior kitchen counter
        
        
        **placement_type**: original
        
        
        **num_results**: 
        
        
        **results**:
        
        
        <img src="https://images.bria.ai/images_resized/e6b05f9d9066811f.jpeg" width="200"/> <img src="https://images.bria.ai/images_resized/b4824b8de120ff79.jpeg" width="200"/>
        <img src="https://images.bria.ai/images_resized/f699039d09e619e3.jpeg" width="200"/> 
        
        
        **bg_prompt**: environment living room interior kitchen counter
        
        
        **placement_type**: automatic
        
        
        **num_results**: 1
        
        
        **canvas_size**: [1200,1000]
        
        
        **results**:
        
        
        <img src="https://images.bria.ai/images_resized/c3fae3c338429ab8.jpg" width="200"/> <img src="https://images.bria.ai/images_resized/f060269f9f1f07a4.jpg" width="200"/>
        <img src="https://images.bria.ai/images_resized/fae8d0dcb20d9e21.jpg" width="200"/> <img src="" width="200"/>
        
        
        **bg_prompt**: environment living room interior kitchen counter
        
        
        **placement_type**: manual_padding
        
        
        **num_results**: 3
        
        
        **padding_values**: [100,100,200,200]
        
        
        **results**:
        
        
        <img src="https://images.bria.ai/images_resized/cad31fdb012cd9c1.jpg" width="150"/> <img src="https://images.bria.ai/images_resized/e6c70f0d4c64a7a6.jpg" width="150"/>
        <img src="https://images.bria.ai/images_resized/a5eb32da12a55ab4.jpg" width="150"/> 
        
        
        You can use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
      
      operationId: replace_bg
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: The visual id of the image for which the user wishes to replace the background
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bg_prompt:
                  type: string
                  description: Text from which you wish to generate the new background
                  example: a high quality professional photo on a concrete table in front of a city skyline, product photography, shallow depth of field, realistic, front view, close up, product image, bokeh. octane render, symmetrical artwork. cinematic, high detail, 8k, realistic lighting
                placement_type:
                  type: string
                  description: This parameter allows you to control the positioning of the product/foreground in the image. Choosing 'original' will preserve the original position of the product/foreground in the image. Choosing 'automatic' will generate results with the 10 recommended positions for the product/foreground. Choosing 'manual_placement' will allow you to select predefined positions (using the parameter 'manual_placement_selection'). Selecting 'manual_padding' will allow you to control the position and size of the image by defining the desired padding in pixels around the product/foreground.
                  example: automatic
                  enum: ["original","automatic","manual_placement","manual_padding"]
                num_results:
                  type: integer
                  default: 4
                  example: 1
                  description: The number of backgrounds you would like to generate for the image. If placement_type!=original, then for each selected placement you will get results in the amount specified in this parameter. 
                canvas_size:
                  type: array
                  items:
                    type: integer
                  example: [900,550]
                  default: [1000,1000]
                  description: The desired size of the final image, after the replacement of the background. This parameter is only relevant when placement_type=automatic or placement_type=manual placement.
                manual_placement_selection:
                  type: array
                  items:
                    type: string
                    enum: ["upper_left","upper_right","bottom_left","bottom_right","right_center","left_center","upper_center","bottom_center","center_vertical","center_horizontal"]
                  example: []
                  default: [upper_left]
                  description: If you've selected placement_type=manual placement, you should use this parameter in order to specify which placements/positions you would like to use from the list. You can select more then one placement in one request.
                padding_values:
                  type: array
                  items:
                    type: integer
                  example: []
                  default: [0,0,0,0]
                  description: The desired padding in pixels around the product/foreground, when using placement_type=manual_padding. The order of the values is [top, bottom, left, right].
                seed:
                  type: integer
                  example: 
                  description: You can choose whether you want your generated results to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                sid:
                  type: string
                  example: ""
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: array
                    description: The array contains the results created in the request. In each result, the first value represents the URL of the result, the second value represents the seed and the third value represents the sid of the result. As this endpoint is asynchronous, the images are not saved to the URLs once the URLs are received in the response. Use API polling on those URLs with a 60-second timeout until you receive the image. Getting a file of size 0 MB indicates that this result is offensive or violates copyrights. You can recreate the same result in the future by using the seed as part of the request. This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
              examples:
                example:
                  value:
                    result: [["https://bria-temp.s3.amazonaws.com/api/replace_bg_results/a59a1c6973999a33_a_man_at_the_office_photorealistic_high_res_detailed_c5b01aca-7946-11ed-9c32-0242ac120002/seed_1.jpg?AWSAccessKeyId=AKIAUL5JH7ABJXXBAV6D&Signature=shkYBjQZcAGXdlluZrPD%2BpHlQ7k%3D&Expires=1671622039",1,"26b54-9812-11ed-884d-56304cc7efc8.JPEG"],["https://bria-temp.s3.amazonaws.com/api/replace_bg_results/a59a1c6973999a33_a_man_at_the_office_photorealistic_high_res_detailed_c5b01aca-7946-11ed-9c32-0242ac120002/seed_2.jpg?AWSAccessKeyId=AKIAUL5JH7ABJXXBAV6D&Signature=MEg7syN2yWhiQov04ewdBDRmuXI%3D&Expires=1671622039",2,"26bab854-9812-11ed-884d-56304cc7efc8.JPEG"],["https://bria-temp.s3.amazonaws.com/api/replace_bg_results/a59a1c6973999a33_a_man_at_the_office_photorealistic_high_res_detailed_c5b01aca-7946-11ed-9c32-0242ac120002/seed_3.jpg?AWSAccessKeyId=AKIAUL5JH7ABJXXBAV6D&Signature=uFHD148AfYZDSWRRWhuUBbNVJQI%3D&Expires=1671622039",3,"26bab854-9812-11ed-884d-563c8.JPEG"],["https://bria-temp.s3.amazonaws.com/api/replace_bg_results/a59a1c6973999a33_a_man_at_the_office_photorealistic_high_res_detailed_c5b01aca-7946-11ed-9c32-0242ac120002/seed_4.jpg?AWSAccessKeyId=AKIAUL5JH7ABJXXBAV6D&Signature=0Ml%2BJw3PSaow7ZEQpDKPu63ej08%3D&Expires=1671622039",4,"26bab854-9812-884d-56304cc7efc8.JPEG"]]
        
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
        '512':
          description: Insufficient resources to process the request.
  /{visual_id}/increase_resolution:
    get:
      tags:
        - Image
      summary: Increase image resolution
      description: >-


        **Description**



        TheÂ *Increase Resolution Route*Â is used to upsacle the resolution of any image.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        PNG files with transparency are not supported by this feature at the moment.
                

      operationId: increase_resolution
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user would like to upscale
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to apply on the result of that route, please provide this information. This parameter is optional.
        - in: query
          name: desired_increase
          schema:
            type: integer
            example: 2
          description: The resolution multiplier. The possible value are 2,4.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.jpeg?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/image_to_psd:
    post:
      tags:
        - Image
      summary: Create a layered PSD file from any image
      description: >-


        **Description**



        TheÂ *Image to PSD Route*Â is used to create a layered PSD file from any image.
        
        
        The image is divided into different layers (depending on the image): a background layer with all identified objects removed, a foreground layer without the background, and a layer for each object. 

        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        

      operationId: image_to_psd
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image, for which the user would like to create a layered PSD file
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to apply on the result of that route, please provide this information. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.psd?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/crop:
    post:
      tags:
        - Image
      summary: Crop an image around the remaining region of interest
      description: >-


        **Description**



        TheÂ *Crop Route*Â is used to crop an image without a background tightly around the remaining region of interest.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
        
        
        On images without transparent backgrounds, the response will be the provided image at the selected resolution.
        

      operationId: crop
      parameters:
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user would like to crop
        - in: query
          name: sid
          schema:
            type: string
            example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                padding:
                  type: integer
                  description: Cropping the object with padding around it. Currently, padding is applied to all four borders of the remaining region. This parameter is optional.
                  default: 0
                  example: 1
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /search:
    get:
      tags:
        - Search
      summary: Search for images matching the given text query
      description: >-


        **Description**



        By using the *Search Route*, you can utilize Bria's generative search capabilities, which don't require labels or keywords.
        
        
        The user can send any text query and receive relevant images that match the query.
        
        
        TheÂ *Search Route* returns the images, sorted by the match score, from highest match to lowest match.
        
        The images are returned in batches, and you can specify how many images to receive in one batch, and which batch to receive in each call.
        

      operationId: search
      parameters:
        - name: query
          in: query
          schema:
            type: string
            example: "woman traveling in the world"
          description: the text query for which the user is looking for matching images.
        - name: num_results_per_page
          in: query
          schema:
            type: integer
            example: 1
          description: how many images you would like to receive from the gallery search. The default value is 50. The maximum value is 500. No need to use this parameter when gallery_search=false.
        - name: page
          in: query
          schema:
            type: integer
            example: 1
          description: which batch of images you would like to receive in the current call. Synthetic results will only be included in page no. 1. The default value is 1. For each query, we support 800 results, so if you set num_results_per_page=50, you will have 16 pages of results.  
        - name: gallery_id
          in: query
          schema:
            type: string
            example: "123abc"
          description: Bria will provide you with this parameter which represents your account's image gallery. You must include this parameter.
        - name: style
          in: query
          schema:
            type: string
            example: "photo realistic"
            enum: ['stock photography','photo realistic','fashion','retro','sports','still life','hyper realistic','travel','artistic','3d render','realistic','fantasy','comic book','minimalistic']
          description: Which style you would like to see in your results, this parameter is optional.
        - name: atmosphere
          in: query
          schema: 
            type: string
            enum: ['dramatic','vivid','warm','cool']
            example: "dramatic"
          description: Which atmosphere you would like to get in your results, this parameter is optional.
        - name: camera
          in: query
          schema: 
            type: string
            enum: ['portrait','close up','aerial','landscape']
            example: "portrait"
          description: Which camera angle you would like to see in your results, this parameter is optional.
        - name: medium
          in: query
          schema: 
            type: string
            enum: ['photography','art']
            example: "photography"
          description: Which medium should be included in your results, this parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results_per_page) and each object represents a single image. The images in the array are sorted by the similarity score, from the highest to the lowest. If the specified batch (=page) is empty, the results array will be empty.
                    items:
                      type: object
                      properties:
                        visual_id:
                          type: string
                          description: visual id of the image, documented in Bria.
                          example: "a169a6862f24de75"
                        org_image_key:
                          type: string
                          description: It will be returned if the image was registered using an org_image_key.
                          example: None
                        source_url:
                          type: string
                          description: It will be returned if the image was registered using a URL.
                          example: None
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /search_similar_images:
    get:
      tags:
        - Search
      summary: Search for images matching the given image
      description: >-


        **Description**



        By using the *Search Similar Images Route*, you can send an image as a query and receive relevant images that are similar.
        
        
        TheÂ *Search Similar Images Route* returns the images, sorted by the similarity score, from the highest to the lowest.
       
        
        The images are returned in batches, and you can specify how many images to receive in one batch, and which batch to receive in each call.
        

      operationId: search_similar_images
      parameters:
        - name: vhash
          in: query
          schema:
            type: string
          description: the visual id of the image for which the user is looking for similar images.
          example: "e01592ef1188df76"
        - name: num_results_per_page
          in: query
          schema:
            type: integer
            example: 1
          description: how many images you would like to receive in the current call. The default value is 50. The maximum value is 500. 
        - name: page
          in: query
          schema:
            type: integer
            example: 1
          description: which batch of images you would like to receive in the current call. The default value is 1. For each query, we support 800 results, so if you set num_results_per_page=50, you will have 16 pages of results.  
        - name: gallery_id
          in: query
          schema:
            type: string
            example: "123abc"
          description: Bria will provide you with this parameter which represents your account's image gallery. You must include this parameter.
        - name: url
          in: query
          schema:
            type: string
            example: None
          description: URL of an image, for which you would like to find similar images. When you want to search based on modified images, or images that have not been uploaded or registered to Bria, you can use this parameter. When this parameter is provided, the visual_id parameter can be None.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results_per_page) and each object represents a single image. The images in the array are sorted by the similarity score, from the highest to the lowest. If the specified batch (=page) is empty, the results array will be empty.
                    items:
                      type: object
                      properties:
                        visual_id:
                          type: string
                          description: visual id of the image, documented in Bria.
                          example: "a169a6862f24de75"
                        org_image_key:
                          type: string
                          description: It will be returned if the image was registered using an org_image_key.
                          example: None
                        source_url:
                          type: string
                          description: It will be returned if the image was registered using a URL.
                          example: None
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
