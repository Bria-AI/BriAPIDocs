openapi: 3.0.0
info:
  title: The Bria API
  version: ''
  contact:
    name: We are happy to answer any questions you may have at
    email: support@bria.ai
  description: >
    # Introduction
    
    
    The Bria API is intended for users to interact with BriEngine and perform various operations, 
    such as generating new images, customizing uploaded images, and searching. 
    
    This document will provide an overview of the API's capabilities and guide users on how to effectively implement it.


    The following routes can be used without calling first to *Upload/Register Routes*:
      - background/remove - Using the *Isolated Background Removal* to remove the background of an image.
      - /text-to-image - By using the *Image Generation* route, you can generate any image you would like, based on the provided prompt.


    **The common use of the Bria API is according to the following order:**
      - /register - By using the *Register Route*, a new image can be sent to Bria without being uploaded to the database. This is the recommended method to onboard images to Bria, when needed.
      - /upload - By using the *Upload Route*, you can upload a new image to the Bria database.


    
    With the response from the *Upload/Register Routes* (visual_id), the following routes can be used without any particular order:
      - /campaign_generator - The *Campaign Generator Route* enables the creation of customized campaigns. It allows for the generation of visual ads, including various elements like text, images, and layout, based on specific parameters provided by the user.
      - /info - By using the *Info Route*, you can understand the possible changes for each object in the image. 
        The following routes can be used if you do not require information for people, objects, and background, but rather only one of them:
         - /person/info
         - /objects/info
         - /background/info
      - /increase_resolution - The *Increase Resolution route* is used to upsacle any image. 
      - /image_to_psd - The *Image To Psd route* is used to create a layered psd file out of any image.
      - /mask_generator - By using the *Mask Generator*, you can get all the available masks for an image, a segmentation for the image. 
      - /search - Utilizing the *Search Route* to look for images you uploaded or registered to Bria that match a text query. 
      - /search_similar_images - Utilizing the *Search Similar Images Route* to look for images you uploaded or registered to Bria that match the chosen image.
      - /caption - By using the *Caption Route*, you can get a caption that describes the given image.
      - /crop - The *Crop Route* is used to crop an image without a background, tightly around the remaining region of interest.

      
    With the response from the *Info Routes* or from the *Mask Generator*, the following routes can be used without any particular order:
      - /create - Using the *Create Route* to create a new visual with requested changes of elements according to the /info route possibilities. 
      - /recast_model - Using the *Recast Model Route* to create a new variation of your image, while customizing a portrait to any profession/theme
      - objects/remove - Using the *Remove Object Route* to remove the objects from an image. You can also use this route with any mask, that is created manually by a user or generated by the /mask_generator endpoint.
      - background/remove - Using the *Remove BG Route* to remove the background of an image.
      - background/blur - Using the *Blur BG Route* to create a blur effect on the background of an image.
      - /replace_bg - Using the *Replace BG Route* to generate new backgrounds for an image.

        
    # Quality Predictions

    
    The "Oracle" capability within the API can significantly elevate the user experience by offering quality prediction functionalities. 

    
    With the Oracle integrated into your product, you can ensure optimal outcomes for your end users. 

    
    This feature covers various endpoints, including /create, objects/remove, and background operations, providing you with a range of quality prediction options to enhance your product's capabilities.

    
    The orcale value predicts the quality of the result, for each possible action.

    
    By using the "info" for all endpoints, "person/info" endpoint for face modifications, "objects/info" for object removal, and "background/info" for background actions, you can access the Oracle's predictions, and help your users to make informed decisions. 
    
    
    Incorporating Oracle predictions into the API workflow enhances efficiency, minimizes errors, and fosters an optimized API experience.   


    # Authentication

      The Bria API consists of a number of methods for uploading and creating new visual assets. The REST (representational state transfer) API methods can be called directly from within your own custom code.

        curl --location --request POST 'https://engine.prod.bria-api.com/v1' \
        --header: 'api_token: <...>' \
        ...
        
    # API Access
    
      You can register and access the API Token through Bria's platform <a href="https://platform.bria.ai/" target="_blank">by clicking here</a>.
      
externalDocs:
    description: Register and get API Access
    url: 'https://labs.bria.ai/api-plans'
servers:
  - url: https://engine.prod.bria-api.com/v1
paths:
  /text-to-image/base/{model_version}:
    post:
      tags:
        - Image
      summary: /text-to-image/base
      description: >-


        **Description**
        

        The /text-to-image/base Route empowers users to create stunning images directly from textual prompts. This model allows for generating high-quality, photorealistic and artistic, images with a resolution of up to 1024x1024 pixels, supporting a variety of aspect ratios natively to accommodate diverse creative needs.


        **Advanced Customization and Access:**


        Beyond the API, developers interested in deeper customization can access BRIA's models directly through Hugging Face. This alternative provides access to the underlying model source code, offering additional features such as ControlNets: <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Canny" target="_blank">Canny</a> , <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Depth" target="_blank">Depth</a>, and <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Recoloring" target="_blank">ReColoring</a>. This option is ideal for developers seeking advanced control over the image generation process and those who wish to integrate cutting-edge AI directly into their workflows.


        **Examples:**


        **prompt**: A professional headshot of a CEO


        **BRIA BASE model 2.3:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(50).png" width="200" height="200"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(51).png" width="200" height="200"/>
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(53).png" width="200" height="200"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(52).png" width="200" height="200"/>


        **prompt**: A vaporwave detailed illustration of a street in London in pastel hues, under a Union Jack sky


        **BRIA BASE model 2.3:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(478).png" width="200" height="200"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(479).png" width="200" height="200"/>


        **prompt**: A portrait of a Beautiful and playful ethereal singer, art deco, fantasy, intricate art deco golden designs, elegant, highly detailed, sharp focus, blurry background, teal and orange shades


        **BRIA BASE model 2.3:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(41).png" width="200" height="200"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/2.3/image+(42).png" width="200" height="200"/>
           
      operationId: /text-to-image/base
      parameters:
        - in: path
          name: model_version
          schema:
            type: string
            enum: ["2.3"]
          required: true
          description: The model version you would like to use in the request. 
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt you would like to use to generate images.
                num_results:
                  type: integer
                  description: How many images you would like to generate.
                  minimum: 1
                  default: 4
                  maximum: 4
                aspect_ratio:
                  type: string
                  description: The aspect ratio of the image. 
                  default: "1:1"
                  enum: ["1:1","2:3","3:2","3:4","4:3","4:5","5:4","9:16","16:9"]
                sync:
                  type: boolean
                  description: Determines the response mode. When true, responses are synchronous. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready.
                  default: false
                seed:
                  type: integer
                  description: You can choose whether you want your generated result to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response with the prompt, model type and model version. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                negative_prompt:
                  type: string
                  description: Specisfy here elements that you didn't ask in the prompt, but are being generated, and you would like to exclude. This parameter is optional.
                steps_num:
                  type: integer
                  description: The number of iterations the model goes through to refine the generated image. This parameter is optional.
                  minimum: 20
                  default: 30
                  maximum: 50
                text_guidance_scale:
                  type: number
                  format: float
                  description: Determines how closely the generated image should adhere to the input text description. This parameter is optional.
                  minimum: 1.0
                  maximum: 10.0
                  default: 5.0
                medium:
                  type: string
                  enum: ['photography','art']
                  description: Which medium should be included in your generated images. This parameter is optional.
                prompt_enhancement:
                  type: boolean
                  description: When set to true, enhances the provided prompt by generating additional, more descriptive variations, resulting in more diverse and creative output images. Note that turning this flag on may result in a few additional seconds to the inference time.
                  default: false
            examples:
              valid prompt:
                value:
                  prompt: "a baby riding a bicycle in a field of flowers"
                  num_results: 1
                  sync: true
              inappropriate prompt:
                value:
                  prompt: "sensual"
                  num_results: 1
                  sync: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        seed:
                          type: integer
                          description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response. 
                        urls:
                          type: string
                          description: This is the URL where the generated image can be found. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via this URL if sync=false.
              examples:
                valid prompt:
                  value:
                    results:  [
                                {
                                  "seed": 1525972691,
                                  "urls": "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
                                }
                              ]
                inappropriate prompt:
                  value:
                    results:  [
                                {
                                  "description": "Query doesn't stand with Bria's ethic rules",
                                  "error_code": "408"
                                }
                              ]
        '209':
          description: Successful operation, a model version that is no longer available was requested. The request was redirected to the latest model version. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        seed:
                          type: integer
                          description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response. 
                        urls:
                          type: string
                          description: This is the URL where the generated image can be found. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via this URL if sync=false.
              examples:
                valid prompt:
                  value:
                    results:  [
                                {
                                  "seed": 1525972691,
                                  "urls": "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
                                }
                              ]
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
  /text-to-image/fast/{model_version}:
    post:
      tags:
        - Image
      summary: /text-to-image/fast
      description: >-


        **Description**
        

        The /text-to-image/fast Route is optimized for speed, enabling rapid image creation without compromising quality. This model allows for generating high-quality, photorealistic and artistic, images with a resolution of up to 1024x1024 pixels, supporting a variety of aspect ratios natively to accommodate diverse creative needs. 
        Ideal for applications requiring quick turnaround without sacrificing image fidelity.


        **Advanced Customization and Access:**


        Beyond the API, developers interested in deeper customization can access BRIA's models directly through Hugging Face. This alternative provides access to the underlying model source code, offering additional features such as ControlNets: <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Canny" target="_blank">Canny</a> , <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Depth" target="_blank">Depth</a>, and <a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-Recoloring" target="_blank">ReColoring</a>. This option is ideal for developers seeking advanced control over the image generation process and those who wish to integrate cutting-edge AI directly into their workflows.


        **An example:**


        **prompt**: A portrait of a Beautiful and playful ethereal singer, art deco, fantasy, intricate art deco golden designs, elegant, highly detailed, sharp focus, blurry background, teal and orange shades


        **BRIA FAST model 2.3:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/fast/image+(42).png" width="200" height="200"/> <img src="https://images.bria.ai/images/b0788963e23ce367.png" width="200" height="200"/>
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/fast/image+(43).png" width="200" height="200"/> <img src="https://images.bria.ai/images/cdee459b344d1a31.png" width="200" height="200"/>

           
      operationId: /text-to-image/fast
      parameters:
        - in: path
          name: model_version
          schema:
            type: string
            enum: ["2.3"]
          required: true
          description: The model version you would like to use in the request. 
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt you would like to use to generate images.
                num_results:
                  type: integer
                  description: How many images you would like to generate. 
                  minimum: 1
                  maximum: 4
                  default: 4
                aspect_ratio:
                  type: string
                  description: The aspect ratio of the image. 
                  default: "1:1"
                  enum: ["1:1","2:3","3:2","3:4","4:3","4:5","5:4","9:16","16:9"]
                sync:
                  type: boolean
                  description: Determines the response mode. When true, responses are synchronous. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready.
                  default: false
                seed:
                  type: integer
                  description: You can choose whether you want your generated result to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response with the prompt, model type and model version. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                steps_num:
                  type: integer
                  description: The number of iterations the model goes through to refine the generated image. This parameter is optional.
                  minimum: 4
                  maximum: 10
                  default: 8
                text_guidance_scale:
                  type: number
                  format: float
                  description: Determines how closely the generated image should adhere to the input text description. This parameter is optional.
                  minimum: 1.0
                  maximum: 10.0
                  default: 5.0
                medium:
                  type: string
                  enum: ['photography','art']
                  description: Which medium should be included in your generated images. This parameter is optional.
                prompt_enhancement:
                  type: boolean
                  description: When set to true, enhances the provided prompt by generating additional, more descriptive variations, resulting in more diverse and creative output images. Note that turning this flag on may result in a few additional seconds to the inference time.
                  default: false
            examples:
              valid prompt:
                value:
                  prompt: "a baby riding a bicycle in a field of flowers"
                  num_results: 1
                  sync: true
              inappropriate prompt:
                value:
                  prompt: "sensual"
                  num_results: 1
                  sync: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        seed:
                          type: integer
                          description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response. 
                        urls:
                          type: string
                          description: This is the URL where the generated image can be found. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via this URL if sync=false.
              examples:
                valid prompt:
                  value:
                    results:  [
                                {
                                  "seed": 1525972691,
                                  "urls": "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
                                }
                              ]
                inappropriate prompt:
                  value:
                    results:  [
                                {
                                  "description": "Query doesn't stand with Bria's ethic rules",
                                  "error_code": "408"
                                }
                              ]
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
  /text-to-image/hd/{model_version}:
    post:
      tags:
        - Image
      summary: /text-to-image/hd
      description: >-


        **Description**
        

        The /text-to-image/hd Route is tailored for projects demanding the utmost in image detail and clarity. This model allows for generating high-quality, photorealistic and artistic, images with unparalleled resolution of 1920x1080 (1:1 1536x1536) pixel, supporting a variety of aspect ratios natively to accommodate diverse creative needs.


        **Advanced Customization and Access:**


        Beyond the API, developers interested in deeper customization can access BRIA's models directly through Hugging Face. This alternative provides access to the underlying model source code, offering additional features such as ControlNets: <a href="https://huggingface.co/spaces/briaai/BRIA-2.2-ControlNet-Canny" target="_blank">Canny</a> , <a href="https://huggingface.co/spaces/briaai/BRIA-2.2-ControlNet-Depth" target="_blank">Depth</a>, and <a href="https://huggingface.co/spaces/briaai/BRIA-2.2-ControlNet-Recoloring" target="_blank">ReColoring</a>. This option is ideal for developers seeking advanced control over the image generation process and those who wish to integrate cutting-edge AI directly into their workflows.


        **Examples:**


        **prompt**: A photo of detailed short female blond hair viewed from behind, with rich texture and clearly visible individual strands that give depth and realism, and featuring subtle waves reflect light


        **BRIA HD model 2.2:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/hd/seed_459779534.png" width="400"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/hd/seed_939823113.png" width="400"/>


        **prompt**: A portrait of a Beautiful and playful ethereal singer, art deco, fantasy, intricate art deco golden designs, elegant, highly detailed, sharp focus, blurry background, teal and orange shades


        **BRIA HD model 2.2:**
        
        
        <img src="https://bria-datasets.s3.amazonaws.com/api_doc/hd/image+(42).png" width="400"/> <img src="https://bria-datasets.s3.amazonaws.com/api_doc/hd/image+(50).png" width="400"/>
           
      operationId: /text-to-image/hd
      parameters:
        - in: path
          name: model_version
          schema:
            type: string
            enum: ["2.2"]
          required: true
          description: The model version you would like to use in the request. 
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt you would like to use to generate images.
                num_results:
                  type: integer
                  description: How many images you would like to generate. 
                  minimum: 1
                  default: 4
                  maximum: 4
                aspect_ratio:
                  type: string
                  description: The aspect ratio of the image. 
                  default: "1:1"
                  enum: ["1:1","2:3","3:2","3:4","4:3","4:5","5:4","9:16","16:9"]
                sync:
                  type: boolean
                  description: Determines the response mode. When true, responses are synchronous, and applicable to single-image requests. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready.
                  default: false
                seed:
                  type: integer
                  description: You can choose whether you want your generated result to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response with the prompt, model type and model version. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                negative_prompt:
                  type: string
                  description: Specisfy here elements that you didn't ask in the prompt, but are being generated, and you would like to exclude. This parameter is optional.
                steps_num:
                  type: integer
                  description: The number of iterations the model goes through to refine the generated image. This parameter is optional.
                  minimum: 20
                  default: 30
                  maximum: 50
                text_guidance_scale:
                  type: number
                  format: float
                  description: Determines how closely the generated image should adhere to the input text description. This parameter is optional.
                  minimum: 1.0
                  maximum: 10.0
                  default: 5.0
                medium:
                  type: string
                  enum: ['photography','art']
                  description: Which medium should be included in your generated images. This parameter is optional.
                prompt_enhancement:
                  type: boolean
                  description: When set to true, enhances the provided prompt by generating additional, more descriptive variations, resulting in more diverse and creative output images. Note that turning this flag on may result in a few additional seconds to the inference time.
                  default: false
            examples:
              valid prompt:
                value:
                  prompt: "a baby riding a bicycle in a field of flowers"
                  num_results: 1
                  sync: true
              inappropriate prompt:
                value:
                  prompt: "sensual"
                  num_results: 1
                  sync: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        seed:
                          type: integer
                          description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response. 
                        urls:
                          type: string
                          description: This is the URL where the generated image can be found. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via this URL if sync=false.
              examples:
                valid prompt:
                  value:
                    results:  [
                                {
                                  "seed": 1525972691,
                                  "urls": "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
                                }
                              ]
                inappropriate prompt:
                  value:
                    results:  [
                                {
                                  "description": "Query doesn't stand with Bria's ethic rules",
                                  "error_code": "408"
                                }
                              ]
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
  /generation/bria-v2/text-to-image:
    post:
      tags:
        - Image
      summary: /generation/bria-v2/text-to-image (Deprecated)
      description: >-


        **Description**

        
        WARNING: Deprecated and scheduled for removal on 01/07/2024. For continued support, use <a href="https://bria-ai-api-docs.redoc.ly/#operation//text-to-image" target="_blank">/text-to-image</a>.


      
        The *Image Generation Route* allows you to generate images based on any given text prompt. 
        
        
        Our most capable model that can generate high-quality 1024x1024px images. **The model supports natively multiple aspect ratios.**

        Here are some examples:
        
        
        **prompt:** A portrait of a Beautiful and playful ethereal singer, art deco, fantasy, intricate art deco golden designs, elegant, highly detailed, sharp focus, blurry background, teal and orange shades
           
           
        **results:**

           
        <img src="https://images.bria.ai/images_resized/c90a5ad279297dc3.png" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/8d6dc1724287717e.png" width="200" height="200"/>
        <img src="https://images.bria.ai/images_resized/ca8ee9c197260d6e.png" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/9c0db2334996eccd.png" width="200" height="200"/>
        
        
        **prompt:** Nature photography, a majestic photo, closeup of a blue and yellow Cameleon on a tropical blue flower with due, drops of water on the flower, outdoors, vegetation, jungle, polarizing photo filter
        
        
        **results:**
        
        
        <img src="https://images.bria.ai/images_resized/a3e93a2adac76194.png" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/cd143cbca39f482e.png" width="200" height="200"/>
        <img src="https://images.bria.ai/images_resized/db242fc93c7ce184.png" width="200" height="200"/> <img src="https://images.bria.ai/images_resized/c10f3b933d738934.png" width="200" height="200"/>
           
      operationId: /generation/bria-v2/text-to-image
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt you would like to use to generate images
                num_results:
                  type: integer
                  description: How many images you would like to generate. The default and maximum value is 4. 
                size:
                  type: array
                  description: The size of the image in pixels. The first value is the width and the second value is the height. Each value must be a multiple of 64. Here is the recommended list of sizes to use [1024,1024],[1344,768],[768,1344],[1088,896],[896,1088],[1152,896],[896,1152],[1216,832],[832,1216].
                  default: [1024,1024]
                sync:
                  type: boolean
                  description: Determines the response mode. When true, responses are synchronous, and applicable to the fast model or single-image requests. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready.
                fast:
                  type: boolean
                  default: false
                  description: If you would like to use the Bria 2.2 Fast model, which provides the best balance between speed and quality, use the value true. 
                seed:
                  type: integer
                  description: You can choose whether you want your generated result to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response with the prompt. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                negative_prompt:
                  type: string
                  description: This parameter is optional.
                steps_num:
                  type: integer
                  description: The number of iterations the model goes through to refine the generated image. This parameter is optional.
                  minimum: 20
                  maximum: 50
                  default: 30
                text_guidance_scale:
                  type: number
                  format: float
                  description: Determines how closely the generated image should adhere to the input text description. This parameter is optional.
                  minimum: 1.0
                  maximum: 10.0
                  default: 5.0
                style:   
                  type: string
                  enum: ['photo realistic','fashion','retro','sports','still life','hyper realistic','travel','artistic','3d render','realistic','fantasy','comic book','minimalistic']
                  description: Which style you would like to see in your generated images.
                atmosphere:
                  type: string
                  enum: ['dramatic','vivid','warm','cool']
                  description: Which atmosphere you would like to get in your generated images.
                camera:
                  type: string
                  enum: ['portrait','close up','aerial','landscape']
                  description: Which camera angle you would like to see in your generated images.
                medium:
                  type: string
                  enum: ['photography','art']
                  description: Which medium should be included in your generated images.
            examples:
              valid prompt:
                value:
                  prompt: "a baby riding a bicycle in a field of flowers"
                  num_results: 1
                  sync: true
              inappropriate prompt:
                value:
                  prompt: "sensual"
                  num_results: 1
                  sync: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results) and each object represents a single image. 
                    items:
                      type: object
                      properties:
                        seed:
                          type: integer
                          description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response. 
                        urls:
                          type: string
                          description: This is the URL where the generated image can be found. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via this URL if sync=false.
              examples:
                valid prompt:
                  value:
                    results:  [
                                {
                                  "seed": 1525972691,
                                  "urls": "https://bria-temp.s3.amazonaws.com/api/generate_image/a_4k_symmetrical_portrait_of_a_woman_traveling_in_the_world_realistic_soft_natural_lighting_85mm_lens_photography_dramatic_lighting_photo_realism_High_contrast_shadows/seed_1109401663.jpg?AWSAccessKeyId=ASIAUL5JH7ABJT4HG6MN&Signature=DOKLVPYHKHbe7bA3hEl262EabLk%3D&x-amz-security-token=FwoGZXIvYXdzEND%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDEl1%2FfpVCJkRvEKkJyKYBBTbjfsDBPKMZsYVU8tO3MMNCxvwAgtzUCvoxqOtEXYmVfCABwvF3jgvXCHup%2BdG3QYV7jHEfAgBLWI%2BMGI%2F%2FntPwdsdsMTxKhSJgymaUq8n8O4GmCSExT5o34U1uhAFpr2YPbrQWdYfuo%2FKIWGTHoBbikLf14yb1sa%2FicwMeVItzrTk%2FSvPAuJCSJh3Mnq%2BlXSSuviKpyMB226UjZPZ6zUYnSwwDHlQFueVRTJopaPvDh8LBlFQIiZqSxRDFqZDCC00rVv17pbD2tRT0kpVoAhE2QXIGzKiErsPJwsWYhOSra2idSUI3gRCHcJpvuTz2ZNBlY1G%2B%2BzJ%2B07LAkXQT4ppBbpO%2BUvo8pN4aTDvvsztgp2pK6wjWCKUBsRcdhpJ96W%2FzK5BepEflzbG%2BWyVaUuIgpd4OAVY4ieR%2BEDPCVqwb2J3tHWPLK1mnLFAKF5%2Fe68pnRpfLHqjl5h03IK5xbWWJZOCThQx%2FHJtA8EWqNUF372GmAKhfpDvc%2BxitjeV5ym4HZRBeCYTiPnM190yLNklriyXxzLFUxWp28B3mm77%2BFK82%2B3PYxWmFPn9WAWZ%2Fa9FszXNfJ7q%2FtjzvophCsww9psYvhgM9LTgXXUgM6CgVL1OP5qxUAEYuV5Hrg3QSWKchrYh0aMrjrOygBxIXhBj6VDkvVdqg4snlS0cTdgjFZTHDZBvFwLN380Vn0233AV%2FjSJGJzyCKPGR5aAGMirgAQFta0KzQHT52sAvNtD6xfYgB1LU6TLR7AL7Ei%2BmPgZ77VVPe8dRuh8%3D&Expires=1680245340"
                                }
                              ]
                inappropriate prompt:
                  value:
                    results:  [
                                {
                                  "description": "Query doesn't stand with Bria's ethic rules",
                                  "error_code": "408"
                                }
                              ]
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
        '512':
          description: Insufficient resources to process the request.
  /datasets/create:
    post:
      tags:
        - Tailored Generation
      summary: /datasets/create (Coming Soon)
      description: >-
        **Description**
  
        This endpoint allows the creation of a new dataset that will belong to the organization associated with the used API token. The dataset will be created with a default status of "draft".
      operationId: createDataset
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
          description: API token associated with the organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_case:
                  type: string
                  enum: [illustrative_style, illustrative_character]
                  description: Specifies the use case of the dataset. Accepted values are "illustrative_style" and "illustrative_character".
                  example: "illustrative_style"
                style_description:
                  type: string
                  description: Description of the visual style. This is currently required but might change in the future.
                  example: "A 2d vibrant and colorful flat illustration."
                name:
                  type: string
                  description: Name of the dataset.
                  example: "My Illustrations"
      responses:
        '201':
          description: Dataset successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the dataset.
                  use_case:
                    type: string
                    description: Specifies the use case of the dataset.
                  style_description:
                    type: string
                    description: Description of the visual style.
                  name:
                    type: string
                    description: Name of the dataset.
                  status:
                    type: string
                    description: Status of the dataset.
                  images_count:
                    type: integer
                    description: Number of images in the dataset.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was last updated.
              example:
                id: "dataset123"
                use_case: "illustrative_style"
                style_description: "A 2d vibrant and colorful flat illustration."
                name: "My Illustrations"
                status: "draft"
                images_count: 0
                created_at: "2024-05-26T12:00:00Z"
                updated_at: "2024-05-26T12:00:00Z"
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
  /datasets:
    get:
      tags:
        - Tailored Generation
      summary: /datasets (Coming Soon)
      description: >-
        **Description**
  
        Retrieve a list of datasets that belong to the organization associated with the used API token. If no datasets are found, an empty array is returned.
      operationId: getDatasets
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
          description: API token associated with the organization.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the dataset.
                    use_case:
                      type: string
                      description: Specifies the use case of the dataset.
                    style_description:
                      type: string
                      description: Description of the visual style.
                    name:
                      type: string
                      description: Name of the dataset.
                    images_count:
                      type: integer
                      description: Number of images in the dataset.
                    status:
                      type: string
                      description: Status of the dataset.
                    created_at:
                      type: string
                      format: date-time
                      description: Timestamp when the dataset was created.
                    updated_at:
                      type: string
                      format: date-time
                      description: Timestamp when the dataset was last updated.
              examples:
                multiple_datasets:
                  summary: Example with multiple datasets
                  value: 
                    - id: "dataset123"
                      use_case: "illustrative_style"
                      style_description: "A 2d vibrant and colorful flat illustration."
                      name: "My Illustrations"
                      images_count: 10
                      status: "completed"
                      created_at: "2024-05-26T12:00:00Z"
                      updated_at: "2024-05-26T12:00:00Z"
                    - id: "dataset124"
                      use_case: "illustrative_character"
                      style_description: "A 2d illustration of a bear"
                      name: "Character bear"
                      images_count: 5
                      status: "draft"
                      created_at: "2024-05-26T12:00:00Z"
                      updated_at: "2024-05-26T12:00:00Z"
                no_datasets:
                  summary: Example with no datasets
                  value: []
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
  /datasets/{id}:
    get:
      tags:
        - Tailored Generation
      summary: /datasets/{id} (Coming Soon)
      description: >-
        **Description**
  
        Retrieve a specific dataset by its ID. The response includes all the details of the dataset and an array of associated images.
      operationId: getDatasetById
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
          description: API token associated with the organization.
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the dataset to retrieve.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the dataset.
                  use_case:
                    type: string
                    description: Specifies the use case of the dataset.
                  style_description:
                    type: string
                    description: Description of the visual style.
                  name:
                    type: string
                    description: Name of the dataset.
                  status:
                    type: string
                    description: Status of the dataset.
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the image.
                        name:
                          type: string
                          description: Name of the image.
                        caption:
                          type: string
                          description: Caption for the image describing the illustration.
                        file_url:
                          type: string
                          description: URL of the image file.
                        created_at:
                          type: string
                          format: date-time
                          description: Timestamp when the image was created.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was last updated.
              example:
                id: "dataset123"
                use_case: "illustrative_style"
                style_description: "A 2d vibrant and colorful flat illustration."
                name: "My Illustrations"
                status: "draft"
                images:
                  - id: "image123"
                    name: "Illustration1"
                    caption: "A vibrant 2D illustration of a sunny day with children playing in a park."
                    file_url: "https://example.com/image1.png"
                    created_at: "2024-05-26T12:00:00Z"
                  - id: "image124"
                    name: "Illustration2"
                    caption: "A colorful 2D illustration depicting a busy city street with various shops and people."
                    file_url: "https://example.com/image2.png"
                    created_at: "2024-05-26T12:00:00Z"
                created_at: "2024-05-26T12:00:00Z"
                updated_at: "2024-05-26T12:00:00Z"
        '401':
          description: Unauthorized.
        '404':
          description: Dataset with the specified ID does not exist.
        '500':
          description: Internal server error.
  /datasets/update/{id}:
    put:
      tags:
        - Tailored Generation
      summary: /datasets/update/{id} (Coming Soon)
      description: >-
        **Description**
  
        Update the details of a specific dataset by its ID. If the status of the dataset is `completed`, the `style_description` and `use_case` cannot be updated. Additionally, if the status is `completed`, it cannot be returned to `draft` if a model has already been trained based on it.
      operationId: updateDataset
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
          description: API token associated with the organization.
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the dataset to update.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_case:
                  type: string
                  description: Specifies the use case of the dataset. Accepted values are "illustrative_style" and "illustrative_character".
                  example: "illustrative_style"
                style_description:
                  type: string
                  description: Description of the visual style.
                  example: "A 2d vibrant and colorful flat illustration."
                name:
                  type: string
                  description: Name of the dataset.
                  example: "Updated Illustrations"
                status:
                  type: string
                  enum: [completed, draft]
                  description: Status of the dataset.
                  example: "completed"
      responses:
        '200':
          description: Dataset successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the dataset.
                  use_case:
                    type: string
                    description: Specifies the use case of the dataset.
                  style_description:
                    type: string
                    description: Description of the visual style.
                  name:
                    type: string
                    description: Name of the dataset.
                  status:
                    type: string
                    description: Status of the dataset.
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the dataset was last updated.
              example:
                id: "dataset123"
                use_case: "illustrative_style"
                style_description: "A 2d vibrant and colorful flat illustration."
                name: "Updated Illustrations"
                status: "completed"
                created_at: "2024-05-26T12:00:00Z"
                updated_at: "2024-05-26T12:00:00Z"
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '404':
          description: Dataset with the specified ID does not exist.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
              examples:
                status_conflict:
                  value:
                    error: "The status of a completed dataset cannot be changed to draft if a model has already been trained based on it."
                use_case_conflict:
                  value:
                    error: "The use_case cannot be updated for a completed dataset."
                style_description_conflict:
                  value:
                    error: "The style_description cannot be updated for a completed dataset."
        '500':
          description: Internal server error.
  /{visual_id}/campaign_generator:
    post:
      tags:
          - Image
      summary: /{visual_id}/campaign_generator
      description: >-


        **Description**
        

        The campaign_generator Route enables users to create visual campaigns for various ad channels using a visual_id. 
        This route facilitates the generation of templates featuring diverse layouts that incorporate elements like text, 
        logos, and calls to action (CTA), tailored to various resolutions (placements) and target audiences. 
        
        
        Ad backgrounds are expanded to fit the necessary layout specifications. 


   
        **Examples**
        
        
        original image (Generated by Bria):
              
        
        <img src="https://images.bria.ai/images_resized/9949e626c333cdb1.png" width="400"/>
        
        
        Results:


        <img src="https://i.ibb.co/gDTVP8r/Sample-3-fixed.png" width="400"/>

      operationId: /campaign_generator
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                # sync:
                #  type: boolean
                #  description: "Synchronization status. Optional. Determines the response mode. When true, responses are synchronous. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready."
                #  default: false
                sid:
                  type: string
                  description: "Session ID. Optional. obtained from a previous route response. Optional."
                preset_id:
                  type: string
                  description: "Preset id. Optional. The brand preset that defines which logo, colors and typography should be used. If one isn’t provided, and some or none of the following are not provided (header1_color, header1_font, header1_size,header1_color, header1_font, header1_size, logo), the default public brand will be used."
                template_id:
                  type: string
                  description: "Template ID, Mandatory. template_id or layout_ids must be provided. You can contact Bria to get your own templates and layouts."
                layout_ids:
                  type: array
                  items:
                    type: string
                  description: "Layout IDs, Mandatory. the ids of the layouts to generate. template_id or layout_ids must be provided. You can contact Bria to get your own templates and layouts."
            #    public_template:
            #      type: boolean
            #      default: true
            #      description: "if template_id is provided, or layout_ids are provided this parameter will be ignored.
            #                    If true, a template will be sampled (based on the provided channels or placements) from the public templates. If false, a template will be sampled (based on the provided channels or placements) from the organization templates."
            #    channel_ids:
            #      type: array
            #      description: "Channel ids. Optional. Only channel_ids or placement_ids should be provided, not both. An error will be returned in case both are provided.
            #                    If both channel_ids and placement_ids are not provided, all the layouts under the selected template (either randomly or by the user) will be returned in the response."
            #      items:
            #        type: string
            #    placement_ids:
            #      type: array
            #      description: "Placement ids. Optional. Only channel_ids or placement_ids should be provided, not both. An error will be returned in case both are provided.
            #                    If both channel_ids and placement_ids are not provided, all the layouts under the selected template (either randomly or by the user) will be returned in the response."
            #      items:
            #        type: string
                logo:
                  type: string
                  description: "Logo URL. Optional. Supported inputs include public image URL or a URL inside Bria s3."
                cta:
                  type: string
                  description: "CTA image URL. Optional. Supported inputs include public image URL or a URL inside Bria s3."
                header1_text:
                  type: string
                  description: "Header1 text. Optional."
                header1_font:
                  type: string
                  description: "Header1 font. Optional. Supported inputs include public ttf URL or a URL inside Bria s3."
                header1_size:
                  type: integer
                  description: "Header1 size. Optional."
                header1_color:
                  type: array
                  items:
                    type: integer
                  description: "Header1 color in hex format. Optional."
                header2_text:
                  type: string
                  description: "Header2 text. Optional."
                header2_font:
                  type: string
                  description: "Header2 font. Optional. Supported inputs include public tiff URL or a URL inside Bria s3."
                header2_size:
                  type: integer
                  description: "Header2 size. Optional."
                header2_color:
                  type: array
                  items:
                    type: integer
                  description: "Header2 color in hex format. Optional."
                seed:
                  type: integer
                  description: "Seed used for image expansion. Optional. Use this to recreate the same ad."
                background_type:
                  type: string
                  enum: ["original", "generated", "solid"]
                  default: "original"
                  description: "Background type. Optional."
                bg_prompt:
                  type: string
                  description: "Background generation prompt. Mandatory when background_type is generated."
                bg_seed:
                  type: integer
                  description: "Background seed. Optional. Relevant when background_type is generated."
                bg_color:
                  type: string
                  description: "Background color in hex code. Mandatory when background_type is solid."
            examples:
              generation by template_id:
                value:
                  template_id: "71"
                  "header1_text": "Discover a world where innovation meets elegance. "
                  "header1_size": 66
                  "header1_font": "s3://bria-brands/Fonts/Poppins-Regular.ttf"
                  "header1_color": "#211469"
                  "header2_text": "Elevate your experience, because with us, the future is now."
                  "header2_size": 33
                  "header2_font": "s3://bria-brands/Fonts/Poppins-Regular.ttf"
                  "header2_color": "#261d54"
                  "logo": "https://labs.bria.ai/static/media/bria_logo.9ee1e12b.png"
              generation by layout_ids:
                value:
                  layout_ids: ["294"]
                  "header1_text": "Discover a world where innovation meets elegance. "
                  "header1_size": 66
                  "header1_font": "s3://bria-brands/Fonts/Poppins-Regular.ttf"
                  "header1_color": "#211469"
                  "header2_text": "Elevate your experience, because with us, the future is now."
                  "header2_size": 33
                  "header2_font": "s3://bria-brands/Fonts/Poppins-Regular.ttf"
                  "header2_color": "#261d54"
                  "logo": "https://labs.bria.ai/static/media/bria_logo.9ee1e12b.png"
      responses:
        '200':
          description: "Successful response with generated campaign visuals."
          content:
            application/json:
              schema:
                type: object
                properties:
                  template_id:
                    type: string
                    description: "Template ID used for generating ads."
                  ads:
                    type: array
                    items:
                      type: object
                      properties:
                        expansion_seed:
                          type: integer
                          description: "Seed used for the image expansion."
                        jpeg_file:
                          type: string
                          format: uri
                          description: "URL of the JPEG version of the ad."
                        png_file:
                          type: string
                          format: uri
                          description: "URL of the PNG version of the ad."
                        layout_id:
                          type: string
                          description: "Layout ID of the ad."
                        psd_file:
                          type: string
                          format: uri
                          description: "URL of the PSD version of the ad."
                        channel:
                          type: object
                          description: "Target marketing channel for the ad."
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                        placement:
                          type: object
                          description: "The placement used for the ad."
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                        canvas_size:
                          type: array
                          items:
                              type: integer
                          description: "The size of the returned campaign image"
                        bg_seed:
                          type: integer
                          description: "Background seed used in generation."
                        template_id:
                          type: string
                          description: "Template ID of the ad."
              examples:
                example:
                  value:
                    {
                      "ads": [
                        {
                          "bg_seed": null,
                          "canvas_size": [
                            1200,
                            627
                          ],
                          "channel": {
                            "id": 7,
                            "name": "Amazon"
                          },
                          "expansion_seed": 4046260470,
                          "jpeg_file": "jpg_file_url",
                          "layout_id": "120",
                          "placement": {
                            "id": 54,
                            "name": "Amazon 1200x627"
                          },
                          "png_file": "png_file_url",
                          "psd_file": "psd_file_url",
                          "template_id": null
                        }
                      ]
                    }

        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /register:
    post:
      tags:
        - Image Onboarding
      summary: /register
      description: >-

        **Description**


        A new visual can be registered to Bria without being uploaded to the database using the *Register Route*.
        
        This route returns a visual identification to the user. This is the recommended method to onboard images to Bria, when needed.
        
        
        It's the first step for consuming the Bria API for new visuals (instead of using the /upload route).


        **Response**

          
          The visual id in the response of the *Register Route* must be kept by the
        user in order to query image info, modify the image and use the search routes.


        ```{ "visual_id": "9ea9a4d2d19977a7c" }```


        The *visual_id* in the response of the /upload route will be used for all
        other routes.
        Store the visual_id in your database and map it to your image identification method for easy reference


        **Bria generative Web tool**


        The registered visual can be seen and used in the Bria generative web tool
        in cases where the tool is licensed as part of the project.


        To do so, the user can access the following url:
        ```https://labs.bria.ai/gallery/{visual_id}```, where the *{visual_id}*
        comes from the response of the */upload route*.



        **Constraints**


        Files should not be larger than 12MB. The status code 413 will be returned if the file exceeds its
        maximum size.
        
        
        The Bria API currently supports only JPEG and PNG files in RGB, RGBA, or CMYK color modes. When the file is of a different type or color mode, the status code 415 will be returned.
        
      operationId: register
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_image_key:
                  type: string
                  description: The internal image id in your API, of the image you would like to register to Bria. If accessing your images requires authentication, you will be able to register them using org_image_key only after giving Bria the API authentication information. It is also possible to register images using an org_image_key, without any authentication data.
                image_url:
                  description: The URL of the image you would like to register to Bria. The URL should lead to an image publicly available online. Either an org_image_key or an image_url should be provided. If both are provided, then the route will use image_url and org_image_key will be saved but not used. Images can only be registered using an image_url if they do not require authentication.
                  type: string
                is_private:   
                  description: The image can be included in the Bria public gallery (is_private=false) or only in the Bria gallery of your organization (is_private=true). This parameter is optional and the default value is true.
                  type: string
                  default: true
            examples:
                only image_url:
                  value:
                    image_url: "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"
                only org_image_key:
                  value:
                    org_image_key: "12345acbd"
                image_url & org_image_key:
                  value:
                    image_url: "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"
                    org_image_key: "12345acbd"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '208':
          description: Image already registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /upload:
    post:
      tags:
        - Image Onboarding
      summary: /upload
      description: >-

        **Description**


        The *Upload Route* is used to upload visuals to the database. 

        This route returns a visual identification to the user. 
        
        The /register route is the recommended method to onboard images to Bria, when needed. 


        **Response**

        
          The visual id in the response of the *Upload Route* must be kept by the
        user in order to query image info, modify the image and use the search routes.


        ```{ "visual_id": "9ea9a4d2d19977a7c" }```


        The *visual_id* in the response of the /upload route will be used for all
        other routes.
        Store the visual_id in your database and map it to your image identification method for easy reference


        **Bria generative Web tool**


        The uploaded visual can be seen and used in the Bria generative web tool
        in cases where the tool is licensed as part of the project.


        To do so, the user can access the following url:
        ```https://labs.bria.ai/gallery/{visual_id}```, where the *{visual_id}*
        comes from the response of the */upload route*.



        **Constraints**


        Files should not be larger than 12MB. The status code 413 will be returned if the file exceeds its
        maximum size.
        
        
        The Bria API currently supports only JPEG and PNG files in RGB, RGBA, or CMYK color modes. When the file is of a different type or color mode, the status code 415 will be returned.

        
        **Upload using a file**

        
          In our documentation request example, we demonstrate how to upload an image using a URL.
          
          
          If you want to upload an image from a file, follow the example below:

      
              import requests
      
              url = "https://engine.prod.bria-api.com/v1/upload"
      
              payload = {}
              files=[
                ('file',('image_name.jpeg',open('/path_to_local_file/image_name.jpeg','rb'),'image/jpeg'))
              ]
              headers = {
                'api_token': 'xxxx'
              }
      
              response = requests.request("POST", url, headers=headers, data=payload, files=files)
      
              print(response.text)
       

      operationId: upload
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  description: The file you would like to upload to Bria.
                  type: string
                  format: binary
                image_url:
                  description: The URL of the file you would like to upload to Bria. The URL should lead to an image publicly available online. Either a file or an image_url should be provided. If both are provided, then the route will use image_url.
                  type: string
                is_private:   
                  description: The image can be included in the Bria public gallery (is_private=false) or only in the Bria gallery of your organization (is_private=true). This parameter is optional and the default value is true.
                  type: string
                  default: true
            examples:
                image url:
                  value:
                    image_url: "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"
                
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '206':
          description: File value was not provided.
        '208':
          description: File already uploaded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  visual_id:
                    type: string
                    description: Unique visual identification
        '400':
          description: Request doesn't contain file part.
        '405':
          description: Method not allowed.
        '413':
          description: Request entity too large.
        '415':
          description: Unsupported media type.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.   
  /{visual_id}/remove_image:
    post:
      tags:
        - Image Onboarding
      summary: /{visual_id}/remove_image
      description: >-

        **Description**


        With this route, you can remove an image from the gallery of your organization. The image won't be removed from Bria.

        
      operationId: remove_image
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          schema:
            type: string
          required: true
          example: "b3cecc33cc31cc31"
      responses:
        '200':
          description: Successful operation.
        '400':
          description: Bad request.
        '405':
          description: Method not allowed.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/info:
    get:
      tags:
        - Image Onboarding
      summary: /{visual_id}/info
      description: >-



        **Description**


        The *Info Route* is used to retrieve useful information on a specific
        visual that was previously uploaded or registered.

        
        Additionally, it provides the following:
        
        1) A description of each object and element within the scene 
        
        
        2) The available changes, which are supported by the Bria API for each object and element


        3) The Oracle value for each available change. The orcale value predicts the quality of the result, for each possible action. 
        
        The possible oracle values for object removal or background actions are true and false. 
        
        The possible values for person modification are high, medium, and low. 
       


      operationId: info
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "8487fb411f3c6716"
          description: visual id of the image, received after using the /upload or /register route.
        - in: query
          name: lean
          schema:
            type: boolean
            default: false
          description: Set the value 'true' for this parameter if you wish to receive only the high-level information (currently, this means only the description, org_height, and org_width) from the info route. This parameter is optional and as default the value is 'false'. 
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    description: (Coming Soon) A brief description of the visual
                  org_height:
                    type: integer
                    description: The height of the image
                  org_width:
                    type: integer
                    description: The width of the image
                  scene:
                    type: array
                    description: An array of objects representing each of the elements recognized in the visual.
                    items:
                      type: object
                      properties:
                        actions:
                          type: object
                          description: The available API actions for this specific element, based directly on its type and specificity
                        bg_overlap:
                          type: number
                          description: The percentage of the object's surface that is mutual with the background. This property is only available for elements with the label 'object'.
                        id:
                          type: string
                          description: The id of the element
                        labels:
                          type: array
                          description: The known information about the element, such as age range and gender
                        oracle:
                          type: object
                          description: The predicted quality of the available actions for this specific element
                        rect:
                          type: object
                          description: The location of the element inside the image. x and y represent the upper left corner of the object, and by using the w (width) and h (height) you can create a rectangle around the element.
                        type:
                          type: string
                          description: The type of the element
              examples:
                example:
                  value:
                    description: Coming Soon
                    scene: [
                      {
                        actions: 
                          {
                          "age":[
                             "mid-20",
                             "mid-40",
                             "mid-60"
                          ],
                          "Beard":[
                             "shaved",
                             "medium",
                             "full"
                          ],
                          "diversity":[
                             "africa",
                             "korea",
                             "india",
                             "japan",
                             "sweden",
                             "germany",
                             "russia",
                             "mexico",
                             "brazil",
                             "england",
                             "spain",
                             "france"
                          ],
                          "expression":[
                             "happy",
                             "surprised",
                             "dreaming",
                             "angry",
                             "fear",
                             "contempt",
                             "disgusted",
                             "sad"
                          ],
                          "gender":[
                             "femininity",
                             "masculinity"
                          ],
                          "glasses":[
                             "light",
                             "none",
                             "heavy"
                          ],
                          "hair_line":[
                             "high",
                             "low"
                          ],
                          "haircolor":[
                             "black",
                             "brown",
                             "red",
                             "blond",
                             "gray"
                          ],
                          "makeup":[
                             "light",
                             "heavy",
                             "none"
                          ]
                          },
                        id: a48284e4832c809e4475ad5de7bdd333658e363b417a28991022a6fa79488a6b,
                        labels:
                          [
                            "age_23-35",
                            "calm"
                          ],
                        oracle:
                          {
                            "age":{
                               "age":"high"
                            },
                            "Beard":{
                               "Beard":"high"
                            },
                            "diversity":{
                               "africa":"high",
                               "brazil":"high",
                               "england":"high",
                               "france":"high",
                               "germany":"high",
                               "india":"high",
                               "japan":"high",
                               "korea":"high",
                               "mexico":"high",
                               "russia":"high",
                               "spain":"high",
                               "sweden":"high"
                            },
                            "expression":{
                               "angry":"high",
                               "contempt":"high",
                               "disgusted":"high",
                               "dreaming":"high",
                               "fear":"high",
                               "happy":"high",
                               "surprised":"high"
                            },
                            "gender":{
                               "gender":"high"
                            },
                            "glasses":{
                               "glasses":"high"
                            },
                            "hair_line":{
                               "hair_line":"high"
                            },
                            "haircolor":{
                               "haircolor":"high"
                            }
                         },
                        type: person
                      },
                      {
                          "id": "0a349cbe603a786570d4eec7dd9cf64e568ef72767a5847251b32988a2b99dff",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 647.4609375,
                              "y": 3910.6640625,
                              "w": 1139.53125,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4
                      },
                      {
                        actions:
                          {
                            "remove":[
                               true
                            ]
                          },
                        id: 26bf1a1e6b7c5a802b804a52be420a14e44c7d4a393d695afb9d58c9f869cac3,
                        labels: null,
                        oracle:
                          {
                            "remove":true
                          },
                        type: background
                                      }
                    ]
        '205':
          description: File hasn’t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call /info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/background/info:
    get:
      tags:
        - Background
      summary: /{visual_id}/background/info
      description: >-



        **Description**


        The *Background/Info Route* is used to retrieve useful information on the background of a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides the following:

        
        1) The available background actions, which are supported by the Bria API.


        1) The Oracle value for each available action. The orcale value predicts the quality of the result, for each possible action. 
        
        The possible oracle values for background actions are true and false. 
               
        
        This route should be used instead of the main /info route when you are only interested in 
        the available actions for the background of the image. 
        With this route, you will save runtime by only obtaining information that is relevant to your needs.

      operationId: background/info
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "f49943971e3039c7"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the background
                    type:
                      type: string
                      description: In this route it will always be 'background'
                    labels:
                      type: array
                      description: In this route currently it's null
                    rect:
                      type: object
                      description: In this route currently it's null
                    actions:
                      type: object
                      description: The available API actions for the background
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for the background
              examples:
                example:
                  value:
                    {
                      "id": "67a9746d4c7939e2753869cdb4330852b6e2472b8110ae1fb59f8c033fc7fe1f",
                      "type": "background",
                      "labels": null,
                      "rect": null,
                      "actions": {
                          "remove": [
                              true
                          ],
                          "blur": [
                              true
                          ],
                          "replace": [
                              true
                          ]
                      },
                      "oracle": {
                          "remove": true,
                          "blur": true,
                          "replace": true
                      }
                  }
        '205':
          description: File hasn’t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call person/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/objects/info:
    get:
      tags:
        - Object
      summary: /{visual_id}/objects/info
      description: >-



        **Description**


        The *Objects/Info Route* is used to retrieve useful information on the objects in a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides the following:

        
        1) The available object actions, which are supported by the Bria API.


        1) The Oracle value for each available action. The orcale value predicts the quality of the result, for each possible action. 
        
        The possible oracle values for object actions are true and false. 
               
        
        This route should be used instead of the main /info route when you are only interested in 
        information and available actions for the objects in the image. 
        With this route, you will save runtime by only obtaining information that is relevant to your needs.

      operationId: objects/info
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "92bf8ce17584de82"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the object
                    type:
                      type: string
                      description: In this route it will be the type of the object
                    labels:
                      type: array
                      description: In this route it will always be 'object'
                    rect:
                      type: object
                      description: The location of the object inside the image. x and y represent the upper left corner of the object, and by using the w (width) and h (height) you can create a rectangle around the object.
                    actions:
                      type: object
                      description: The available API actions for this specific object.
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for this specific object
                    bg_overlap:
                      type: number
                      description: The percentage of the object's surface that is mutual with the background.
                    mask_id:
                      type: number
                      description: This parameter should be currently ignored and doesn't have any function. 
              examples:
                example:
                  value:
                    [
                      {
                          "id": "d34ef7cf0b4e1ea2e414cdff7ae9ded80162f1f93bb94df709fe29d9df3dbfb5",
                          "type": "dining table",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 1294.921875,
                              "y": 4143.75,
                              "w": 2253.1640625,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4,
                          "mask_id": 1
                      },
                      {
                          "id": "d1b004a7b3b065aa8b98b321b67806cb3e6ca09e596ad6d3f31c625e46e168e2",
                          "type": "potted plant",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 4558.125,
                              "y": 2667.5390625,
                              "w": 517.96875,
                              "h": 725.15625
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.67,
                          "mask_id": 2
                      },
                      {
                          "id": "f173a0ad62749dbeb97f8055f51d3d125d4c9c968ee3ae46754e911f3fd12000",
                          "type": "vase",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 3366.796875,
                              "y": 2123.671875,
                              "w": 595.6640625,
                              "h": 284.8828125
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.89,
                          "mask_id": 3
                      },
                      {
                          "id": "7a3bd30a268840cc3645abf7b512c3b9b8bc2d55d98aa5f7ef8c1e72348a016c",
                          "type": "potted plant",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 3263.203125,
                              "y": 1398.515625,
                              "w": 854.6484375,
                              "h": 751.0546875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 1.0,
                          "mask_id": 4
                      },
                      {
                          "id": "0289aaf067a6d7d812738a8d42d17e54ffd2fa79e0decbca46a873018a6d791a",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 2900.625,
                              "y": 3858.8671875,
                              "w": 1502.109375,
                              "h": 2486.25
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.0,
                          "mask_id": 5
                      },
                      {
                          "id": "0a349cbe603a786570d4eec7dd9cf64e568ef72767a5847251b32988a2b99dff",
                          "type": "chair",
                          "labels": [
                              "object"
                          ],
                          "rect": {
                              "x": 647.4609375,
                              "y": 3910.6640625,
                              "w": 1139.53125,
                              "h": 2071.875
                          },
                          "actions": {
                              "remove": [
                                  true
                              ],
                              "replace": [
                                  true
                              ]
                          },
                          "oracle": {
                              "remove": true
                          },
                          "bg_overlap": 0.4,
                          "mask_id": 6
                      }
                  ]
        '205':
          description: File hasn’t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call objects/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/objects/mask_generator:
    post:
      tags:
        - Object
      summary: /{visual_id}/objects/mask_generator
      description: >-



        **Description**


        The *Objects/Mask Generator Route* is used to generate all possible masks for an image.
        

        The response contains a zip file named as the visual_id of the provided image.
        
        
        There are k mask files in the zip, each named with the visual_id and mask_id.
        

        The zip file contains an additional file whose name ends with "panoptic". It's not an image, it's a panoptic map. It can be transformed into a regular matrix.
        
        
        Each point in the image (x,y) is mapped to the mask that applies to that point. In the panoptic map, each pixel's grayscale value includes the mask_id. 
        

        You can display those masks to the user, let them pick one or more masks, and use objects/remove route to remove the masked area.


        In order to use the objects/remove route on the mask the user selected, you should provide the mask_id, and use the paramter mask_source=generated.

        
        You can see below an example of the content of the zip:

        
              92bf8ce17584de82_panoptic.png
      
              
              92bf8ce17584de82_1.png
      
              
              92bf8ce17584de82_2.png
      
              
              92bf8ce17584de82_3.png
      
              
              ...
      
              
              92bf8ce17584de82_86.png


        You can access the SDK that demonstrates how to use this endpoint in a UI in the following <a href="https://github.com/Bria-AI/js-api-sdk/blob/50a062867092788aaa9612f2cc69f7692567115a/mask_hover_ui" target="_blank">link</a>.

      operationId: objects/mask_generator
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "92bf8ce17584de82"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  objects_masks:
                    type: string
                    example: "https://bria-image-repository.s3.amazonaws.com/mask2click/masks/92bf8ce17584de82.zip?AWSAccessKeyId=AKIAUL5JH7ABJXXBAV6D&Signature=vCX%2BHEAnGmUolwLxKfPBBKPUZaM%3D&Expires=1690732111"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/caption:
    get:
      tags:
        - AI Search
      summary: /{visual_id}/caption
      description: >-


        **Description**



        The *Caption Route* is used to get a caption that describes the given image.
        

      operationId: caption
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image for which you'd like a caption
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        caption:
                          type: string
                          example: "woman walking on a bridge in the jungle"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.

  /{visual_id}/person/info:
    get:
      tags:
        - AI-Presenter
      summary: /{visual_id}/person/info
      description: >-



        **Description**


        The *Person/Info Route* is used to retrieve useful information on the people in a specific
        visual that was previously uploaded to the database.

        
        Additionally, it provides a description of each person within the scene 
        along with its available changes, which are supported by the Bria API. 

        
        This route should be used instead of the main /info route when you are only interested in 
        information and available actions for the people in the image. 
        With this route, you will save time by only obtaining information that is relevant to your needs.

      operationId: person/info
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "f49943971e3039c7"
          description: visual id of the image, received after using the /upload or register route.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actions:
                      type: object
                      description: The available API actions for this specific person.
                    id:
                      type: string
                      description: The id of the person
                    labels:
                      type: array
                      description: The known information about the person, such as age range and gender
                    oracle:
                      type: object
                      description: The predicted quality of the available actions for this specific person
                    rect:
                      type: object
                      description: The location of the face inside the image. x and y represent the upper left corner of the face, and by using the w (width) and h (height) you can create a rectangle around the face.
                    type:
                      type: string
                      description: In this route it will allways be 'person'
              examples:
                example:
                  value:
                    [
                      {
                        actions:{
                           "age":[
                              "mid-20",
                              "mid-40",
                              "mid-60"
                           ],
                           "Beard":[
                              "shaved",
                              "medium",
                              "full"
                           ],
                           "diversity":[
                              "original",
                              "africa",
                              "korea",
                              "india",
                              "japan",
                              "sweden",
                              "germany",
                              "russia",
                              "mexico",
                              "brazil",
                              "england",
                              "spain",
                              "france",
                              "unsplash"
                           ],
                           "expression":[
                              "happy",
                              "surprised",
                              "dreaming",
                              "angry",
                              "fear",
                              "contempt",
                              "disgusted",
                              "sad",
                              "smile"
                           ],
                           "gender":[
                              "femininity",
                              "masculinity"
                           ],
                           "glasses":[
                              "light",
                              "none",
                              "heavy"
                           ],
                           "hair_line":[
                              "high",
                              "low"
                           ],
                           "haircolor":[
                              "black",
                              "brown",
                              "red",
                              "blond",
                              "gray"
                           ],
                           "makeup":[
                              "light",
                              "heavy",
                              "none"
                           ]
                        },
                        id:"c6bbe1cd719300c11e5c581889e9383245a0c1d923f210a3445e8ea5a25500e0",
                        labels:[
                           "age_14-26",
                           "glasses",
                           "Female"
                        ],
                        oracle:{
                           "age":{
                              "age":"low"
                           },
                           "Beard":{
                              "Beard":"low"
                           },
                           "diversity":{
                              "africa":"low",
                              "brazil":"low",
                              "england":"low",
                              "france":"low",
                              "germany":"low",
                              "india":"low",
                              "japan":"low",
                              "korea":"low",
                              "mexico":"low",
                              "russia":"low",
                              "spain":"low",
                              "sweden":"low"
                           },
                           "expression":{
                              "angry":"high",
                              "calm":"high",
                              "contempt":"high",
                              "disgusted":"high",
                              "dreaming":"high",
                              "fear":"high",
                              "happy":"high",
                              "surprised":"high"
                           },
                           "gender":{
                              "gender":"low"
                           },
                           "glasses":{
                              "glasses":"low"
                           },
                           "hair_line":{
                              "hair_line":"low"
                           },
                           "haircolor":{
                              "haircolor":"low"
                           }
                        },
                        rect:{
                           "h":375.98625326156616,
                           "w":280.4049072265625,
                           "x":1134.1341552734375,
                           "y":290.6307406425476
                        },
                        type:"person"
                     },
                     {
                        actions:{
                           "age":[
                              "mid-20",
                              "mid-40",
                              "mid-60"
                           ],
                           "Beard":[
                              "shaved",
                              "medium",
                              "full"
                           ],
                           "diversity":[
                              "original",
                              "africa",
                              "korea",
                              "india",
                              "japan",
                              "sweden",
                              "germany",
                              "russia",
                              "mexico",
                              "brazil",
                              "england",
                              "spain",
                              "france",
                              "unsplash"
                           ],
                           "expression":[
                              "happy",
                              "surprised",
                              "dreaming",
                              "angry",
                              "fear",
                              "contempt",
                              "disgusted",
                              "sad",
                              "smile"
                           ],
                           "gender":[
                              "femininity",
                              "masculinity"
                           ],
                           "glasses":[
                              "light",
                              "none",
                              "heavy"
                           ],
                           "hair_line":[
                              "high",
                              "low"
                           ],
                           "haircolor":[
                              "black",
                              "brown",
                              "red",
                              "blond",
                              "gray"
                           ],
                           "makeup":[
                              "light",
                              "heavy",
                              "none"
                           ]
                        },
                        id:"d74da71f722b45de5f18f93e9dd7fc64a50a5a5dda001985ab9c2374807182b8",
                        labels:[
                           "age_26-42",
                           "happy",
                           "Female"
                        ],
                        oracle:{
                           "age":{
                              "age":"high"
                           },
                           "Beard":{
                              "Beard":"high"
                           },
                           "diversity":{
                              "africa":"high",
                              "brazil":"high",
                              "england":"high",
                              "france":"high",
                              "germany":"high",
                              "india":"high",
                              "japan":"high",
                              "korea":"high",
                              "mexico":"high",
                              "russia":"high",
                              "spain":"high",
                              "sweden":"high"
                           },
                           "expression":{
                              "angry":"high",
                              "calm":"high",
                              "contempt":"high",
                              "disgusted":"high",
                              "dreaming":"high",
                              "fear":"high",
                              "happy":"high",
                              "surprised":"high"
                           },
                           "gender":{
                              "gender":"high"
                           },
                           "glasses":{
                              "glasses":"high"
                           },
                           "hair_line":{
                              "hair_line":"high"
                           },
                           "haircolor":{
                              "haircolor":"high"
                           }
                        },
                        rect:{
                           "h":354.8530983924866,
                           "w":282.885498046875,
                           "x":555.80419921875,
                           "y":486.4655692577362
                        },
                        type:"person"
                     }
                  ]    
        '205':
          description: File hasn’t finished onboarding. Please call /info again until you get 200.
        '400':
          description: One of the details does not meet specification. Please call person/info again.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/create:
    post:
      tags:
        - AI-Presenter
      summary: /{visual_id}/create
      description: >-


        **Description**



        The *Create Route* is used to create a new visual, based on the changes
        requested by the user for a previously uploaded visual.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.


        This route returns both the URL and the sid associated with the updated image.


        Before making any modifications, please call the /info or person/info route to obtain information on the available presenters in the image, the available modifications, and their oracle values.


        You should always include all the required changes in the request if you want to use multiple changes on a single person. It is not supported to make one request on a person with one change, take the SId from the result, and then use it in another request with a different change.


        When you want to make changes on multiple people, you can make one request with all the desired changes on all the relevant people or make one request with all the desired changes on one person and then use the sid from the response in the request on the other person. 

      operationId: create
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
          example: "8487fb411f3c6716"
          description: visual id of the image the user wants to create a new visual from.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sid:
                  type: string
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
                desired_resolution:
                  type: string
                  description: The desired resolution of the updated image. This parameter is optional.
                  enum: ["original", "nhd", "svga", "xga", "had", "wuxga", "uwfhd", "wqxga", "uwqhd", "uhd"]
                changes:
                  type: array
                  description: The requested changes to the original visual.
                  items:
                    type: object
                    properties: 
                      id:
                        type: string
                        description: Id of the selected object in the image, to which the user would like to make changes.
                      actions:
                        type: object
                        description: The changes the user wishes to perform for this object in the image. Each action the user chooses to use must be included in the info route response for this object and image. This is essential for the /create request to be successful.
                        properties: 
                          age:
                            type: string
                            enum: ["mid-20", "mid-40", "mid-60"]
                            description: Changing the age of a selected person. It is possible to use one of the enum values or to provide a value between -10 and 10. Decimal values are acceptable.
                          diversity:
                            type: string
                            enum:
                              - africa
                              - korea
                              - india
                              - japan
                              - sweden
                              - germany
                              - russia
                              - mexico
                              - brazil
                              - england
                              - spain
                              - france
                            description: Changing the diversity of a selected person. It is possible to use one of the enum values or to provide in addition to the enum a value between 0 and 1. 
                          expression:
                            type: string
                            enum:
                              - happy
                              - surprised
                              - dreaming
                              - angry
                              - fear
                              - contempt
                              - disgusted
                              - sad
                            description: Changing the expression of a selected person. It is possible to use one of the enum values or to provide in addition to the enum a value between 0 and 1.5. 
                          glasses:
                            type: string
                            enum: ["light", "heavy", "none"]
                            description: Changing the glasses of a selected person. It is possible to use one of the enum values or to provide a value between 0 and 6. Only integer values are acceptable.
                          haircolor:
                            type: string
                            enum: ["black", "brown", "red", "blond", "gray"]
                            description: Changing the hair color of a selected person. It is possible to use one of the enum values or to provide a value between 0 and 4. Only integer values are acceptable.
                          gender:
                            type: string
                            enum: ["femininity","masculinity"]
                            description: Changing the gender of a selected person. It is possible to use one of the enum values or to provide a value between -10 and 10. Decimal values are acceptable.
                          makeup:
                            type: string
                            enum: ["light", "heavy", "none"]
                            description: Changing the makeup of a selected person. It is possible to use one of the enum values or to provide a value between -10 and 10. Decimal values are acceptable.
                          hair_line:
                            type: string
                            enum: ["high", "low"]
                            description: Changing the hair line of a selected person. It is possible to use one of the enum values or to provide a value between -20 and 20. Decimal values are acceptable.
                          Beard:
                            type: string
                            enum: ["shaved", "medium", "full"]
                            description: Changing the facial hair of a selected person. It is possible to use one of the enum values or to provide a value between -2 and 2. Decimal values are acceptable.
            examples:
              Using enum values:
                value:
                  changes:
                    [
                      {
                        "id": "c6bbe1cd719300c11e5c581889e9383245a0c1d923f210a3445e8ea5a25500e0",
                        "actions": {
                          "age": "mid-60",
                          "diversity": "france",
                          "expression": "happy"
                        }
                      }
                    ]
              Using continuous numeric values:
                value:
                  changes:
                    [
                      {
                        "id": "c6bbe1cd719300c11e5c581889e9383245a0c1d923f210a3445e8ea5a25500e0",
                        "actions": {
                          "age": {"key":"age","value":6.2},
                          "diversity": {"key":"france","value":0.8},
                          "expression": {"key":"happy","value":0.6}
                        }
                      }
                    ]
              Using enum values and continuous numeric values:
                value:
                  changes:
                    [
                      {
                        "id": "c6bbe1cd719300c11e5c581889e9383245a0c1d923f210a3445e8ea5a25500e0",
                        "actions": {
                          "age": {"key":"age","value":6.2},
                          "diversity": "france",
                          "expression": {"key":"happy","value":0.6}
                        }
                      }
                    ]
              Multiple People:
                value:
                  changes:
                    [
                      {
                        "id": "person_1",
                        "actions": {
                          "age": {"key":"age","value":6.2},
                          "diversity": "france",
                          "expression": {"key":"happy","value":0.6}
                        }
                      },
                      {
                        "id": "person_1",
                        "actions": {
                          "age": {"key":"age","value":6.2},
                          "diversity": "france",
                          "expression": {"key":"happy","value":0.6}
                        }
                      }
                    ]
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the new visual created in the request. It is a temporary URL that will expire
                    example: "https://d1uzvjowrxhw13.cloudfront.net/api/create_results/8487fb411f3c6716_05e8a8dc-b723-11ec-be15-c28fc8b4a55b.JPEG?AWSAccessKeyId=ASIAUL5JH7ABM5GPF244&Signature=OaE%2BTJW%2FBJFDB2xGXpy%2F%2F8TYkAE%3D&x-amz-security-token=FwoGZXIvYXdzEEsaDHAX5TxTwymFAQYSwSKYBK3lKAwEipl9tjg1QQwWMdQDqS%2B0rYkexasgxxW78Vz4DvJUVPISpnTOZk4h%2Fy6%2BikLC5%2FYGY86SL8980ZHZzRgqcodDJ0n6ljB7SgbkfJnSpgx%2F8iCHzoDH%2BS7YrUjnR7e%2FUz%2B4sIbV%2BSHGn36EXTNnrm%2FOgCsiL9vqLSGFEo5R1pLYIbezxWCEWMLcDO5x9WsVoPRYW7c%2B5B%2B1Ku3qybQEBFRex4BVisJU4NTXbwQKFWMbkTjHg5vK%2FEdQn7OzmCA7SfCSHe%2FqDZIBQG0ki%2BHt%2Fs4bAYYTZpl%2FjoUJTldlltdWH2uitj%2BBeyQKcUnHrPjTY1CsAOEC6OV%2FKlZfOjbNJTvlmHc7%2BKP3iICKlCVJwvRK6%2FnmU7mUVOb%2FmgD2kIvBq5G6fNxXQlKfFGZE2lSs8HR83sp44Qz8hm60DPfK45hE0XdVnIS2jY%2F1a%2BYBmijCr4HDTgv52D53CdnOiQ%2BQ8Yld0bBZRC4aDBATcvcsDcnO4BBMY0NS1c%2BSJ6b4IMxDK2OKdanf9EYiDgzr3ebsS1m7j4NX3pEvNC99YF%2B5PQwDYhbMwlMCAG9AMs9%2FF86Al3czOJFOxV1ClBEoUKy2TgntGraCp76UoLmRrHuRq7WKQUvIj2HAXsIlyNkBg3z498M1Gh7vyD%2F7xQgA0Ny6zYeC1gBH4HmYtFlBS%2BJimmxFlCoCuyFhBmUXp7p6oBI3APuSyQYLKLmQwJIGMioiS3mUno68q7GAsD%2FPmSCM8xMeEWF8IegvlU4XWAQuNnQJLVtqwkZb1Qo%3D&Expires=1650276159"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/recast_model:
    post:
      tags:
        - AI-Presenter
      summary: /{visual_id}/recast_model
      description: >-


        **Description**



        The *Recast Model Route* is used to create customized and eye-catching images of people that match various themes or professions by modifying their outfit, body structure, hair, and background.
        
        
        This provides an easy and quick way to generate high-quality visuals for businesses, creative projects, or personal use without the need for extensive photography or design work. 
        
        
        The feature is also fun and engaging for social media or entertainment purposes, allowing users to create custom avatars or profile pictures that reflect their personality.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
      operationId: recast_model
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user wishes to customize.
        - in: query
          name: prompt
          schema:
            type: string
            example: "superhero"
          description: The profession or theme to which you would like to customize your image.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  message:
                    type: string
                    example: "Finished sucessfully"
                    description: A message that describes the request status. The options are Finished sucessfully, Content might not be safe for work, only 1 face allowed, No face found.
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
                  status:
                    type: string
                    example: "SUCCESS"
                    description: The request status. The options are SUCCESS, NSFW, ONE_FACE_ALLOWED, NO_FACES_FOUND.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.   
  /{visual_id}/objects/remove:
    post:
      tags:
        - Object
      summary: /{visual_id}/objects/remove
      description: >-
        **Description**




        The *Remove Object Route* is used to remove objects or areas. 


        You can provide the area for removal in the following methods:
        

        
        1) Call the /mask_generator endpoint, display the masks to the user, allow them to select a mask, and then send the mask_id to the objects/remove endpoint. Under the example named generated mask, you can see an example of this type of request.



        2) Allow the user to create a mask manually (by using a brush, for example), and then send the mask_url to the objects/remove endpoint. Under the example named manual mask, you can see an example of this type of request. You can access the SDK that demonstrates how to implement a brush feature in your Interface via the following <a href="https://github.com/Bria-AI/js-api-sdk/blob/main/manual_brush_ui" target="_blank">link</a>.



        3) Get the possible objects for removal using the /info or objects/info endpoint, present them to the user, and allow them to select objects for removal using the object name. Send the id of the selected object to the objects/remove endpoint. Under the example named object, you can see an example of this type of request.

        


        In one request, you may send multiple IDs of objects, or points, or masks for removal, but you cannot combine them in one request. For example, you cannot send a point and a mask_id at the same time. 


        You can also use this route on a modified image by providing the sid from the response of the previously used route.


        This route returns both the URL and the sid associated with the updated image.


        Before making any modifications, please call the /info or objects/info route to obtain information on the available predefined objects in the image, the available modifications, and their Oracle values. If you are using mask_url or positive_points there is no need to call the info routes.
        
      operationId: objects/remove
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "86f9986390596e8f"
          description: visual id of the image the user wants to remove objects from.
        - in: query
          name: desired_resolution
          schema:
            type: string
            example: "original"
            enum: ["original", "nhd", "svga", "xga", "had", "wuxga", "uwfhd", "wqxga", "uwqhd", "uhd"]
          description: The desired resolution of the updated image. This parameter is optional.
        - in: query
          name: original_quality
          schema:
            type: boolean
            example: true
          description: If you would like to retain the quality of the original image, please set this parameter to true. This parameter is optional. This parameter can also be used as a body parameter.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sid:
                  type: string
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
                  example: "aaeec34e-9804-11ed-a479-964fdf514767.JPEG"
                enhance:
                  type: boolean
                  description: Please use the value true in order to get the best result possible. 
                  example: true
                changes:
                  type: array
                  description: The requested changes to the image. In one request, you may send multiple IDs of objects, or points, or masks for removal, but you cannot combine them in one request. For example, you cannot send a point and a mask at the same time.  
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Id of the selected object in the image, which the user would like to remove. If you include a mask or a point, there is no need to use this parameter.
                      mask_url:
                        type: string
                        description: A public URL that includes a mask in the following format - PNG file, a binary image in which the area that should be removed should get the value 255 (white) and the rest should get the value 0 (black). If you include an id or a point, there is no need to use this parameter.
                      mask_id:
                        type: integer
                        description: When you use the /mask_generator endpoint, it returns a group of masks, each with its own unique ID. Once you present the masks to the user, and he selects a mask, you can pass its ID in order to remove that area. 
                      mask_source:
                        type: string
                        enum: ["manual","generated"]
                        description: This parameter is only relevant, if a mask_url or mask_id were used. If the mask was created using a brush (free-hand) then use the option 'manual'. If the mask was the output from the route /objects/mask_generator, use the option 'generated'.
                      positive_points:
                        type: array
                        items:
                          type: integer
                        description: A point in the image, that represents an object that should be removed. Based on this point a mask will be created and used in order to remove the required area. If you include a mask or an id, there is no need to use this parameter.
                      size:
                        type: array
                        items:
                          type: integer
                        description: This parameter is only relevant if this object in the array includes the parameter positive_points. Please specify the size in px of the provided image.
                      actions:
                        type: object
                        description: The changes the user wishes to perform for this object in the image. Each action the user chooses to use must be included in the info route response for this object and image.
                        properties:
                          remove:
                            type: boolean
                            description: Use the value true if you would like to remove the object
            examples:
                generated mask:
                  value:
                    {
                      "enhance": true,
                      "changes": [ 
                        {
                          "mask_id": 30,
                          "mask_source": "generated",
                          "actions": {
                            "remove": true
                            }
                          }
                        ]
                      }
                manual mask:
                  value:
                    {
                      "enhance": true,
                      "changes": [ 
                        {
                          "mask_url": "https://i.ibb.co/JRcgVq7/f2093906b0f041d4b2acb438a8d72084.png",
                          "mask_source": "manual",
                          "actions": {
                            "remove": true
                            }
                          }
                        ]
                      }
                object:
                  value:
                    {
                      "enhance": true,
                      "changes": [ 
                        {
                          "id": "630cf6f9c206e3ec414f0c3006221b7b9252243707cfabf59e65490c6dfe5d56",
                          "actions": {
                            "remove": true
                            }
                          }
                        ]
                      }
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
                  image_res:
                    type: string
                    description: URL that represents the new visual created in the request. It is a temporary URL that will expire
                    example: "https://d1uzvjowrxhw13.cloudfront.net/api/create_results/8487fb411f3c6716_05e8a8dc-b723-11ec-be15-c28fc8b4a55b.JPEG?AWSAccessKeyId=ASIAUL5JH7ABM5GPF244&Signature=OaE%2BTJW%2FBJFDB2xGXpy%2F%2F8TYkAE%3D&x-amz-security-token=FwoGZXIvYXdzEEsaDHAX5TxTwymFAQYSwSKYBK3lKAwEipl9tjg1QQwWMdQDqS%2B0rYkexasgxxW78Vz4DvJUVPISpnTOZk4h%2Fy6%2BikLC5%2FYGY86SL8980ZHZzRgqcodDJ0n6ljB7SgbkfJnSpgx%2F8iCHzoDH%2BS7YrUjnR7e%2FUz%2B4sIbV%2BSHGn36EXTNnrm%2FOgCsiL9vqLSGFEo5R1pLYIbezxWCEWMLcDO5x9WsVoPRYW7c%2B5B%2B1Ku3qybQEBFRex4BVisJU4NTXbwQKFWMbkTjHg5vK%2FEdQn7OzmCA7SfCSHe%2FqDZIBQG0ki%2BHt%2Fs4bAYYTZpl%2FjoUJTldlltdWH2uitj%2BBeyQKcUnHrPjTY1CsAOEC6OV%2FKlZfOjbNJTvlmHc7%2BKP3iICKlCVJwvRK6%2FnmU7mUVOb%2FmgD2kIvBq5G6fNxXQlKfFGZE2lSs8HR83sp44Qz8hm60DPfK45hE0XdVnIS2jY%2F1a%2BYBmijCr4HDTgv52D53CdnOiQ%2BQ8Yld0bBZRC4aDBATcvcsDcnO4BBMY0NS1c%2BSJ6b4IMxDK2OKdanf9EYiDgzr3ebsS1m7j4NX3pEvNC99YF%2B5PQwDYhbMwlMCAG9AMs9%2FF86Al3czOJFOxV1ClBEoUKy2TgntGraCp76UoLmRrHuRq7WKQUvIj2HAXsIlyNkBg3z498M1Gh7vyD%2F7xQgA0Ny6zYeC1gBH4HmYtFlBS%2BJimmxFlCoCuyFhBmUXp7p6oBI3APuSyQYLKLmQwJIGMioiS3mUno68q7GAsD%2FPmSCM8xMeEWF8IegvlU4XWAQuNnQJLVtqwkZb1Qo%3D&Expires=1650276159"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.     
  /background/remove:
    post:
      tags:
        - Background
      summary: /background/remove
      description: >-

        **Description**


        The *Remove BG* Route can be used to remove the background of an image.


        **The main difference between the regular and this isolated background removal endpoint is that you can use this endpoint without uploading or registering the image to Bria.**



        **Constraints**
        
        
        The Bria API currently supports only JPEG and PNG files in RGB, RGBA, or CMYK color modes. When the file is of a different type or color mode, the status code 415 will be returned.

        
        **Remove the background from an image using the image file**

        
          In our documentation request example, we demonstrate how to remove the background from an image using the image URL.
          
          
          If you want to use an image from a file, follow the example below:

      
              import requests
      
              url = "https://engine.prod.bria-api.com/v1/background/remove"
      
              payload = {}
              files=[
                ('file',('image_name.jpeg',open('/path_to_local_file/image_name.jpeg','rb'),'image/jpeg'))
              ]
              headers = {
                'api_token': 'xxxx'
              }
      
              response = requests.request("POST", url, headers=headers, data=payload, files=files)
      
              print(response.text)
       

      operationId: isolated_background/remove
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  description: The image file you would like to remove the background from.
                  type: string
                  format: binary
                image_url:
                  description: The URL of the image file you would like to remove the background from. The URL should lead to an image publicly available online. Either a file or an image_url should be provided. If both are provided, then the route will use image_url.
                  type: string
            examples:
                image url:
                  value:
                    image_url: "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result_url:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire.
        '206':
          description: File value was not provided.
        '400':
          description: Request doesn't contain file part.
        '405':
          description: Method not allowed.
        '415':
          description: Unsupported media type.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.   

  /{visual_id}/background/remove:
    get:
      tags:
        - Background
      summary: /{visual_id}/background/remove
      description: >-


        **Description**



        The *Remove BG Route* is used to remove the background of a previously uploaded image. 
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.


        Before making any modifications, please call the /info or background/info route to obtain information on the available modifications, and their oracle values.
        

      operationId: background/remove
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image from which the user wishes to remove the background
        - in: query
          name: sid
          schema:
            type: string
            example: "Remove this parameter if the image has not been modified using Bria."
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
        - in: query
          name: desired_resolution
          schema:
            type: string
            enum: ['original','nhd','svga','xga','hd','wuxga','uwfhd','wqxga','uwqhd','uhd']
            example: "original"
          description: The desired resolution of the updated image. This parameter is optional.
        - in: query
          name: original_quality
          schema:
            type: boolean
            example: true
          description: If you would like to retain the quality of the original image, please set this parameter to true. Enabling this parameter during background removal may cause longer response times, depending on the quality and size of the original image. This parameter is optional. 
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/background/blur:
    get:
      tags:
        - Background
      summary: /{visual_id}/background/blur
      description: >-


        **Description**



        The *background/blur Route* is used to create a blur effect on the background of a previously uploaded image. 
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.


        Before making any modifications, please call the /info or background/info route to obtain information on the available modifications, and their oracle values.
         

      operationId: blur_bg
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image for which the background should be blurred.
        - in: query
          name: scale
          schema:
            type: integer
            example: 4
            minimum: 1
            maximum: 5
            default: 5
          description: A scale for determining how blurry the background of the image should be. The options are 1, 2, 3, 4, 5. This parameter is optional.
        - in: query
          name: sid
          schema:
            type: string
            example: "Remove this parameter if the image has not been modified using Bria."
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
        - in: query
          name: desired_resolution
          schema:
            type: string
            enum: ['original','nhd','svga','xga','hd','wuxga','uwfhd','wqxga','uwqhd','uhd']
            example: "original"
          description: The desired resolution of the updated image. This parameter is optional.      
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.  
  /{visual_id}/replace_bg:
    post:
      tags:
        - Background
      summary: /{visual_id}/replace_bg
      description: >-


        **Description**



        The *Replace BG Route* is used to replace the background of a previously uploaded image with a generated background using the state-of-the-art BRIA 2.3 ControlNet BG-Gen model (<a href="https://huggingface.co/briaai/BRIA-2.3-ControlNet-BG-Gen" target="_blank">available on Hugging Face</a>). This new version offers higher-quality backgrounds and more precise control compared to the previous BRIA 1.4-based model.
        
        
        Additionally, you can change the image size of the final result as well as the positioning of the product or foreground of the image. This will enable you to create new and unique variations of your original image.


        This endpoint also supports solid colors - you can take a color code and use it in the prompt.

        Before making any modifications, please call the /info or background/info route to obtain information on the available modifications, and their oracle values.
        
        
        Here are some examples:
        
        
        **original image**: 
        
        
        <img src="https://images.bria.ai/images_resized/e69b992499669933.png" width="200"/>
        
        
        **bg_prompt**: a bottle in a living room interior, on a kitchen counter
        
        
        **placement_type**: original
        
        
        **num_results**: 
        
        
        **results**:
        
        
        <img src="https://i.ibb.co/tK6XLS4/bria-e69b992499669933-2.jpg" width="200"/> <img src="https://i.ibb.co/f2cndL3/bria-e69b992499669933-1.jpg" width="200"/>
        <img src="https://i.ibb.co/ZHNQt6x/bria-e69b992499669933.jpg" width="200"/> 
        
        
        **bg_prompt**: in a living room interior, on a kitchen counter

        
        You can use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
      
      operationId: replace_bg
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "b3cecc33cc31cc31"
          description: The visual id of the image for which the user wishes to replace the background
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sync:
                  type: boolean
                  default: false
                  description: Determines the response mode. When true, responses are synchronous. With false, responses are asynchronous, immediately providing URLs for images that are generated in the background. Use polling for the URLs to retrieve images once ready.
                sid:
                  type: string
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
                desired_resolution:
                  type: string
                  description: The desired resolution of the updated image. This parameter is optional.
                  enum: ["original", "nhd", "svga", "xga", "had", "wuxga", "uwfhd", "wqxga", "uwqhd", "uhd"]
                bg_prompt:
                  type: string
                  description: Text from which you wish to generate the new background
                refine_prompt:
                  type: boolean
                  default: false
                  description: It is recommended to set this parameter to 'true'. When true, an additional logic takes the bg_prompt that was included and adjusts it to achieve optimal results. 
                num_results:
                  type: integer
                  default: 4
                  description: The number of backgrounds you would like to generate for the image. If placement_type!=original, then for each selected placement you will get results in the amount specified in this parameter. 
                seed:
                  type: integer
                  example: 
                  description: You can choose whether you want your generated results to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                negative_prompt:
                  type: string
                  description: This parameter is optional.
            example:
                bg_prompt: "a bottle in a living room interior, on a kitchen counter"
                placement_type: "original"
                num_results: 4
                refine_prompt: true
                sync: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: array
                    description: The array contains the results created in the request. In each result, the first value represents the URL of the result, the second value represents the seed and the third value represents the sid of the result. Bria recognizes offensive and inappropriate images. The URL will lead to a 0-byte file if an image like that is generated. It will take a few seconds for the image to become available via the URL if sync=false. You can recreate the same result in the future by using the seed as part of the request. The sid (session id) represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
              example:
                  result: [['result_url', 244184855, 'ef3d9a20-4d5d-11ee-8741-8e22fc45bbfc.JPEG']]
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
        '512':
          description: Insufficient resources to process the request.
  /{visual_id}/image_expansion:
    post:
      tags:
        - Image
      summary: /{visual_id}/image_expansion
      description: >-


        **Description**



        The *Image Expension Route* can be used to expand an image and its background, by utilizing generative AI.
        
        
        You can decide on the image size of the final result as well as the position and size of the original image compared to the final result.
        
        
        In this way, you can create unique variations of your original image instead of cropping it into different aspect ratios and losing important details.
        
        
        Here are some examples:
        
        
        **original image (Generated by Bria)**: 
        
        
        <img src="https://bria-image-repository.s3.amazonaws.com/images/caeaa19524d69ad6.jpg" width="200"/>
        
        
        **results**:
        
        
        <img src="https://bria-image-repository.s3.amazonaws.com/images/d4d49719b5a54e49.jpg" width="400"/> <img src="https://bria-image-repository.s3.amazonaws.com/images/cbf61f2b859662c0.jpg" width="200"/>
        <img src="https://bria-image-repository.s3.amazonaws.com/images/aa9b3036e5c6d43a.jpg" width="600"/> 
        
        
         **original image (Stock Image)**: 
        
        
        <img src="https://bria-image-repository.s3.amazonaws.com/images/c64220ebda5ce787.jpg" width="200"/>
        
        
        **results**:
        
        
        <img src="https://bria-image-repository.s3.amazonaws.com/images/d35530e95ab7c509.jpg" width="400"/> <img src="https://bria-image-repository.s3.amazonaws.com/images/84752d2fca8a6ae3.jpg" width="200"/>
        <img src="https://bria-image-repository.s3.amazonaws.com/images/904f62b0dce4fb8c.jpg" width="600"/> 
                
        
        You can use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
      
      operationId: image_expansion
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: The visual id of the image which the user wishes to expand
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                canvas_size:
                  type: array
                  items:
                    type: integer
                  default: [1000,1000]
                  description: The desired size of the final image, after the expansion.
                original_image_size:
                  type: array
                  items:
                    type: integer
                  description: The desired size of the original image, inside the full canvas.
                original_image_location:
                  type: array
                  items:
                    type: integer
                  description: The desired location of the original image, inside the full canvas. Provide the location of the upper left corner of the original image. The location can also be outside the canvas (the original image will be cropped).
                prompt:
                  type: string
                  description: Text on which you wish to base the image expansion. This parameter is optional.
                seed:
                  type: integer
                  description: You can choose whether you want your generated expension to be random or predictable. You can recreate the same result in the future by using the seed value of a result from the response. You can exclude this parameter if you are not interested in recreating your results. This parameter is optional.
                sid:
                  type: string
                  description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
                negative_prompt:
                  type: string
                  description: This parameter is optional.
              example: 
                canvas_size: [1200,674]
                original_image_size: [610,855]
                original_image_location: [301,-66]
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://d1uzvjowrxhw13.cloudfront.net/api/res/8487fb411f3c6716/3b890600-0a9a-11ee-a0d6-565ee9a92763.JPEG?AWSAccessKeyId=ASIAUL5JH7ABOLVAC5ZD&Signature=OG99zCeOrmhZmcbs2GqnSurA4rU%3D&x-amz-security-token=FwoGZXIvYXdzEMv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDD3WDwL%2BmvmCdZsBySKYBF54jsyE%2Fwwy5R8eFojz2FRGia6H6nGTaqFL7VXu3DG%2BidiqIqsIX0yUeegtNiaTEJV8smLwIN4ZHLLyw1lNl5XmPBIQA7jcGKwipo8QJK1o8YWI9gXRJGl8gjjCXC1FbkUOfDQzW2jpMms8zc8jZqX85rz0ZjfcHx1bt3V2CS7Y7mLRkQ7lOh1qBoYtvq%2BqxqZIemCLtC7H2%2FWzon7zuUPaSI%2B8C0sE6dLO3srjBsNV%2BqN%2BKiXIn4Jel0pJtJOjL5lSDz6e3faN4oXBH%2FKBbs2fhJrulJQwEctxt2vqW7UdNDy4YIGykC7diGvCSiE0d2qoWmm%2BGBKiPVBOyDS8EPwUO%2BxUtQQCWfsLogAB4GULTZJAh9DsA%2FgSIe9UtXNp59joPlqx9dN0NaN%2BSRsI2p65b9%2F8pZk1XbKKM5D6DqY01S%2FiomWmQirphuoZq2G%2F%2Fg7ZSKxY8IXTG8332hJgt3JyyqfiHO%2Fp5l4NHkrb0%2BmLl%2FO7OOu3%2BtZAQoYjWmuOqUPULFUAohMzzTLtgOFOXthbmzRj1j48V%2Fsish1OSYRdd6E0BzfJhNH%2BNIfOFlvJOF7Ysgs%2FBGrQtKsbhR7ZQiKK%2B1qRBTnXmxUClc6W9%2BT95EBploe%2B7Vi0pXApVIKy4Y00rgdGPQUnst3oiF8EpwyhBcoCyTKgeboUtUu09zO7Wj6miC%2BMqu20J2iT%2FOnC9l2bvLPa3UicKKeYpqQGMirzoGKqbdAANhJI71KyKOW0bjgbkjtdFS324biy8YLLVhbFnzj4jKu0mNc%3D&Expires=1687341603"
                  message:
                    type: string
                    example: "Finished sucessfully"
                    description: A message that describes the request status. The options are Finished sucessfully, Content might not be safe for work.
                  prompt:
                    type: string
                    example: "a man in a shirt sitting down in front of a brick wall looking off to the side"
                    description: The prompt used to generate the expansion. If you want to recreate the result again, you should use in the request the prompt and the seed of the response.
                  seed:
                    type: integer
                    example: 1525972691
                    description: If you want to recreate the result again, you should use in the request the prompt and the seed of the response.
                  sid:
                    type: string
                    example: "3b5b6858-0a9a-11ee-a0d6-565ee9a92763.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
                  status:
                    type: string
                    example: "SUCCESS"
                    description: The request status. The options are SUCCESS, NSFW.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
        '512':
          description: Insufficient resources to process the request.

  /image/increase_resolution:
    post:
      tags:
        - Image
      summary: /image/increase_resolution
      description: >-


        **Description**



        The *Isolated Increase Resolution Route* is used to upsacle the resolution of any image.


        **The main difference between the regular and this isolated Increase Resolution endpoint is that you can use this endpoint without uploading or registering the image to Bria.**


        **Constraints**
        
        
        The Bria API currently supports only JPEG and PNG files in RGB, RGBA, or CMYK color modes. When the file is of a different type or color mode, the status code 415 will be returned. 
        
        
        It's possible to increase the resolution of an image up to a total area of 8192x8192 pixels.

        
        **Increase the Resolution of an image using the image file**

        
          In our documentation request example, we demonstrate how to Increase the Resolutio of an image using the image URL.
          
          
          If you want to use an image from a file, follow the example below:

      
              import requests
      
              url = "https://engine.prod.bria-api.com/v1/image/increase_resolution?desired_increase=2"
      
              payload = {}
              files=[
                ('file',('image_name.jpeg',open('/path_to_local_file/image_name.jpeg','rb'),'image/jpeg'))
              ]
              headers = {
                'api_token': 'xxxx'
              }
      
              response = requests.request("POST", url, headers=headers, data=payload, files=files)
      
              print(response.text)
                        

      operationId: isolated_increase_resolution
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: query
          name: desired_increase
          schema:
            type: integer
            example: 2
          description: The resolution multiplier. The possible value are 2,4. It's possible to increase the resolution of an image up to a total area of 8,192x8,192 pixels.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                file:
                  description: The image file you would like to increase the resolution for.
                  type: string
                  format: binary
                image_url:
                  description: The URL of the image file you would like to increase the resolution for. The URL should lead to an image publicly available online. Either a file or an image_url should be provided. If both are provided, then the route will use image_url.
                  type: string
            examples:
                image url:
                  value:
                    image_url: "https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result_url:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.jpeg?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
        '400':
          description: Bad request
        '405':
          description: Method not allowed.
        '460':
          description: Failed to download image.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.

  /{visual_id}/increase_resolution:
    get:
      tags:
        - Image
      summary: /{visual_id}/increase_resolution
      description: >-


        **Description**



        The *Increase Resolution Route* is used to upsacle the resolution of any image.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
                        

      operationId: increase_resolution
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user would like to upscale
        - in: query
          name: sid
          schema:
            type: string
            example: "Remove this parameter if the image has not been modified using Bria."
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to apply on the result of that route, please provide this information. This parameter is optional.
        - in: query
          name: desired_increase
          schema:
            type: integer
            example: 2
          description: The resolution multiplier. The possible value are 2,4.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.jpeg?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/image_to_psd:
    post:
      tags:
        - Image
      summary: /{visual_id}/image_to_psd
      description: >-


        **Description**



        The *Image to PSD Route* is used to create a layered PSD file from any image.
        
        
        The image is divided into different layers (depending on the image): a background layer with all identified objects removed, a foreground layer without the background, and a layer for each object. 

        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        

      operationId: image_to_psd
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image, for which the user would like to create a layered PSD file
        - in: query
          name: sid
          schema:
            type: string
            example: "Remove this parameter if the image has not been modified using Bria."
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to apply on the result of that route, please provide this information. This parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.psd?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /{visual_id}/crop:
    post:
      tags:
        - Image
      summary: /{visual_id}/crop
      description: >-


        **Description**



        The *Crop Route* is used to crop an image without a background tightly around the remaining region of interest.
        
        
        You can also use this route on a modified image by providing the sid from the response of the previously used route.
        
        
        This route returns both the URL and the sid associated with the updated image.
        
        
        On images without transparent backgrounds, the response will be the provided image at the selected resolution.
        

      operationId: crop
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - in: path
          name: visual_id
          required: true
          schema:
            type: string
            example: "8487fb411f3c6716"
          description: visual id of the image the user would like to crop
        - in: query
          name: sid
          schema:
            type: string
            example: "Remove this parameter if the image has not been modified using Bria."
          description: This session id was obtained from the response of a route that had been applied to this visual id. If you have used another route on the provided visual before, and you would like the current route to modify the result of that route, please provide this information. This parameter is optional.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                padding:
                  type: integer
                  description: Cropping the object with padding around it. Currently, padding is applied to all four borders of the remaining region. This parameter is optional.
                  default: 0
                  example: 1
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_res:
                    type: string
                    description: URL that represents the updated visual created in the request. It is a temporary URL that will expire
                    example: "https://bria-temp.s3.amazonaws.com/engine_no_bg/727b73c6-b723-11ec-947a-c28fc8b4a55b.png?AWSAccessKeyId=ASIAUL5JH7ABNOAGDDHM&Signature=IIZp7MtiAoY32wIq%2BAVoUd7U3XY%3D&x-amz-security-token=FwoGZXIvYXdzEEwaDJNBqgbCH8ZLEjbtwCKYBByHo1V0nSnkoDy3kvaujvGHcNdmw0pYIwWYuvYdnKYv5zmzE4k%2FcgcB8YfY8DXKBOZR9DB%2FpzwoMPYf%2FxDMy4NenzSXw4VymF3j97bTEy6M00j%2BVO3K5fJOpN7iWlrxTaFHQICUW7%2FHE4CvaQ%2FB%2BWoCakNiEESUQxGglIygfJpviyexXNsxNGpeq7BPSSrTdsuD6R27pKmdFgdkL3xzUgMQMKzSeTJL4hUVGVldOp5sI4Qlvwnb8L%2FW7ciHHjUCf8WuHtDjDSdBIAqNci6wtXL6SQwLG%2Fo3oryPr0tNOMsbnrIIoFP5ZnH3VQISPCITBkWuUu9bdXkBm2R7rJyfPPOusFLuom2GDyVEHJfA%2FUtwGELxtv7Co29Tujd2N%2BHRhcdyrNsngwYwU2AiLyopMglYIDNQpv9%2FIKnH9ikuki%2F%2FWQ2PnzepcttQuXzlsqlUJRg%2Fcqhqis%2BxwJXZL1vpPJb%2BJz22oMp%2FJqZw%2BOIBWdxiL0pRq%2FF6EmyQz8iuhVBkr%2BnN5eWWxOrizMLFoVRTP34NPOWvWLwZJlrHzryCY8wZ01u2OLu3jxMcBhwypIp4pCzwx%2BAo39AXU1iMHJq36S6Bl5uptEr1NONKQvvz%2BpndF5t1dnoK7lfD9XExjk16shJXIImqiN7kxP2RTIrKsvm8wJY6iPxE35%2Bn0Cw8BS1eRmXFIOdEcfzbJVq80SQRIMko4CePyoOiKPCRwJIGMipiGM2hMspLQDThPJdlIiCOIh670Q2pu95y27iI3i87WQB55KJ9JNTL39I%3D&Expires=1650276342"
                  sid:
                    type: string
                    example: "aaeec35e-9904-21ed-a479-964fdf514767.JPEG"
                    description: This session id represents the result of the current route request. If you wish to use this result in other routes, please provide this sid in their input.
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /search:
    get:
      tags:
        - AI Search
      summary: /search
      description: >-


        **Description**



        By using the *Search Route*, you can utilize Bria's generative search capabilities, which don't require labels or keywords.
        
        
        The user can send any text query and receive relevant images that match the query.
        
        
        The *Search Route* returns the images, sorted by the match score, from highest match to lowest match.
        
        The images are returned in batches, and you can specify how many images to receive in one batch, and which batch to receive in each call.
        

      operationId: search
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - name: query
          in: query
          schema:
            type: string
            example: "woman traveling in the world"
          description: the text query for which the user is looking for matching images.
        - name: num_results_per_page
          in: query
          schema:
            type: integer
            example: 1
          description: how many images you would like to receive from the gallery search. The default value is 50. The maximum value is 500. No need to use this parameter when gallery_search=false.
        - name: page
          in: query
          schema:
            type: integer
            example: 1
          description: which batch of images you would like to receive in the current call. Synthetic results will only be included in page no. 1. The default value is 1. For each query, we support 800 results, so if you set num_results_per_page=50, you will have 16 pages of results.  
        - name: gallery_id
          in: query
          schema:
            type: string
            example: "425"
          description: Bria will provide you with this parameter which represents your account's image gallery. You must include this parameter.
        - name: style
          in: query
          schema:
            type: string
            example: "photo realistic"
            enum: ['stock photography','photo realistic','fashion','retro','sports','still life','hyper realistic','travel','artistic','3d render','realistic','fantasy','comic book','minimalistic']
          description: Which style you would like to see in your results, this parameter is optional.
        - name: atmosphere
          in: query
          schema: 
            type: string
            enum: ['dramatic','vivid','warm','cool']
            example: "dramatic"
          description: Which atmosphere you would like to get in your results, this parameter is optional.
        - name: camera
          in: query
          schema: 
            type: string
            enum: ['portrait','close up','aerial','landscape']
            example: "portrait"
          description: Which camera angle you would like to see in your results, this parameter is optional.
        - name: medium
          in: query
          schema: 
            type: string
            enum: ['photography','art']
            example: "photography"
          description: Which medium should be included in your results, this parameter is optional.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results_per_page) and each object represents a single image. The images in the array are sorted by the similarity score, from the highest to the lowest. If the specified batch (=page) is empty, the results array will be empty.
                    items:
                      type: object
                      properties:
                        visual_id:
                          type: string
                          description: visual id of the image, documented in Bria.
                          example: "a169a6862f24de75"
                        org_image_key:
                          type: string
                          description: It will be returned if the image was registered using an org_image_key.
                          example: None
                        source_url:
                          type: string
                          description: It will be returned if the image was registered using a URL.
                          example: None
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
  /search_similar_images:
    get:
      tags:
        - AI Search
      summary: /search_similar_images
      description: >-


        **Description**



        By using the *Search Similar Images Route*, you can send an image as a query and receive relevant images that are similar.
        
        
        The *Search Similar Images Route* returns the images, sorted by the similarity score, from the highest to the lowest.
       
        
        The images are returned in batches, and you can specify how many images to receive in one batch, and which batch to receive in each call.
        

      operationId: search_similar_images
      parameters:
        - in: header
          name: api_token
          schema:
            type: string
          required: true
        - name: vhash
          in: query
          schema:
            type: string
            example: "e01592ef1188df76"
          description: the visual id of the image for which the user is looking for similar images.
        - name: num_results_per_page
          in: query
          schema:
            type: integer
            example: 1
          description: how many images you would like to receive in the current call. The default value is 50. The maximum value is 500. 
        - name: page
          in: query
          schema:
            type: integer
            example: 1
          description: which batch of images you would like to receive in the current call. The default value is 1. For each query, we support 800 results, so if you set num_results_per_page=50, you will have 16 pages of results.  
        - name: gallery_id
          in: query
          schema:
            type: string
            example: "425"
          description: Bria will provide you with this parameter which represents your account's image gallery. You must include this parameter.
        - name: url
          in: query
          schema:
            type: string
            example: "If you are using the vhash paramater, there is no need to use this parameter"
          description: URL of an image, for which you would like to find similar images. When you want to search based on modified images, or images that have not been uploaded or registered to Bria, you can use this parameter. When this parameter is provided, the visual_id parameter can be None. The supported file types are jpg, jpeg and png, up to 12 mb.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: there are multiple objects in this array (based on the amount specified in num_results_per_page) and each object represents a single image. The images in the array are sorted by the similarity score, from the highest to the lowest. If the specified batch (=page) is empty, the results array will be empty.
                    items:
                      type: object
                      properties:
                        visual_id:
                          type: string
                          description: visual id of the image, documented in Bria.
                          example: "a169a6862f24de75"
                        org_image_key:
                          type: string
                          description: It will be returned if the image was registered using an org_image_key.
                          example: None
                        source_url:
                          type: string
                          description: It will be returned if the image was registered using a URL.
                          example: None
        '400':
          description: Bad request.
        '404':
          description: Specified Image does not exist.
        '405':
          description: Method not allowed.
        '500':
          description: Internal server error.
        '506':
          description: Insufficient data. The given input is not supported by the Bria API.
